--------------------------------------------------------
-- Archivo creado  - lunes-julio-07-2025   
--------------------------------------------------------
DROP TABLE "BN_MAIE"."BNMAIE01_ENTIDAD" cascade constraints;
DROP TABLE "BN_MAIE"."BNMAIE02_OPERACION" cascade constraints;
DROP TABLE "BN_MAIE"."BNMAIE04_PARAMETRO" cascade constraints;
DROP TABLE "BN_MAIE"."BNMAIE05_AUDITORIA" cascade constraints;
DROP TABLE "BN_MAIE"."BNMAIE07_CONEXION" cascade constraints;
DROP TABLE "BN_MAIE"."BNMAIE08_CAMPO_TRAMA" cascade constraints;
DROP TABLE "BN_MAIE"."BNMAIE09_LLAVE_BODY" cascade constraints;
DROP TABLE "BN_MAIE"."BNMAIE10_MAPEO" cascade constraints;
DROP SEQUENCE "BN_MAIE"."BNMAIE07_SEQ";
DROP SEQUENCE "BN_MAIE"."BNSQ_01_ENTIDAD";
DROP SEQUENCE "BN_MAIE"."BNSQ_02_OPERACION";
DROP SEQUENCE "BN_MAIE"."BNSQ_03_REGLA";
DROP SEQUENCE "BN_MAIE"."BNSQ_04_PARAMETRO";
DROP SEQUENCE "BN_MAIE"."BNSQ_05_AUDITORIA";
DROP SEQUENCE "BN_MAIE"."BNSQ_08_CAMPO_TRAMA";
DROP SEQUENCE "BN_MAIE"."BNSQ_09_LLAVE_BODY";
DROP SEQUENCE "BN_MAIE"."BNSQ_10_MAPEO";
DROP PACKAGE "BN_MAIE"."BNPKG_MAIE_CAMPO_TRAMA08";
DROP PACKAGE "BN_MAIE"."BNPKG_MAIE_CONEXION07";
DROP PACKAGE "BN_MAIE"."BNPKG_MAIE_ENTIDAD01";
DROP PACKAGE "BN_MAIE"."BNPKG_MAIE_LLAVE_BODY09";
DROP PACKAGE "BN_MAIE"."BNPKG_MAIE_MAPEO10";
DROP PACKAGE "BN_MAIE"."BNPKG_MAIE_OPERACION02";
DROP PACKAGE "BN_MAIE"."BNPKG_MAIE_PARAMETRO04";
DROP PACKAGE BODY "BN_MAIE"."BNPKG_MAIE_CAMPO_TRAMA08";
DROP PACKAGE BODY "BN_MAIE"."BNPKG_MAIE_CONEXION07";
DROP PACKAGE BODY "BN_MAIE"."BNPKG_MAIE_ENTIDAD01";
DROP PACKAGE BODY "BN_MAIE"."BNPKG_MAIE_LLAVE_BODY09";
DROP PACKAGE BODY "BN_MAIE"."BNPKG_MAIE_MAPEO10";
DROP PACKAGE BODY "BN_MAIE"."BNPKG_MAIE_OPERACION02";
DROP PACKAGE BODY "BN_MAIE"."BNPKG_MAIE_PARAMETRO04";
--------------------------------------------------------
--  DDL for Sequence BNMAIE07_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "BN_MAIE"."BNMAIE07_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 4 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
  GRANT SELECT ON "BN_MAIE"."BNMAIE07_SEQ" TO "BNRL_MAIE";
--------------------------------------------------------
--  DDL for Sequence BNSQ_01_ENTIDAD
--------------------------------------------------------

   CREATE SEQUENCE  "BN_MAIE"."BNSQ_01_ENTIDAD"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 81 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence BNSQ_02_OPERACION
--------------------------------------------------------

   CREATE SEQUENCE  "BN_MAIE"."BNSQ_02_OPERACION"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 61 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence BNSQ_03_REGLA
--------------------------------------------------------

   CREATE SEQUENCE  "BN_MAIE"."BNSQ_03_REGLA"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence BNSQ_04_PARAMETRO
--------------------------------------------------------

   CREATE SEQUENCE  "BN_MAIE"."BNSQ_04_PARAMETRO"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
  GRANT SELECT ON "BN_MAIE"."BNSQ_04_PARAMETRO" TO "BNRL_MAIE";
--------------------------------------------------------
--  DDL for Sequence BNSQ_05_AUDITORIA
--------------------------------------------------------

   CREATE SEQUENCE  "BN_MAIE"."BNSQ_05_AUDITORIA"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence BNSQ_08_CAMPO_TRAMA
--------------------------------------------------------

   CREATE SEQUENCE  "BN_MAIE"."BNSQ_08_CAMPO_TRAMA"  MINVALUE 1 MAXVALUE 999999999999 INCREMENT BY 1 START WITH 52 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
  GRANT SELECT ON "BN_MAIE"."BNSQ_08_CAMPO_TRAMA" TO "BNRL_MAIE";
--------------------------------------------------------
--  DDL for Sequence BNSQ_09_LLAVE_BODY
--------------------------------------------------------

   CREATE SEQUENCE  "BN_MAIE"."BNSQ_09_LLAVE_BODY"  MINVALUE 1 MAXVALUE 9999999 INCREMENT BY 1 START WITH 8 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
  GRANT SELECT ON "BN_MAIE"."BNSQ_09_LLAVE_BODY" TO "BNRL_MAIE";
--------------------------------------------------------
--  DDL for Sequence BNSQ_10_MAPEO
--------------------------------------------------------

   CREATE SEQUENCE  "BN_MAIE"."BNSQ_10_MAPEO"  MINVALUE 1 MAXVALUE 9999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
  GRANT SELECT ON "BN_MAIE"."BNSQ_10_MAPEO" TO "BNRL_MAIE";
--------------------------------------------------------
--  DDL for Table BNMAIE01_ENTIDAD
--------------------------------------------------------

  CREATE TABLE "BN_MAIE"."BNMAIE01_ENTIDAD" 
   (	"B01_ID_ENTIDAD" VARCHAR2(4 BYTE), 
	"B01_DESCRIPCION" VARCHAR2(150 BYTE), 
	"B01_TIPO_COMUNICACION" NUMBER(1,0), 
	"B01_TIPO_TRAMA_BN" NUMBER(1,0) DEFAULT 1, 
	"B01_TIPO_TRAMA_EX" NUMBER(1,0) DEFAULT 1, 
	"B01_IND_MAPEO" NUMBER(1,0) DEFAULT 0, 
	"B01_ESTADO" NUMBER(1,0) DEFAULT 1, 
	"B01_USU_CRE" VARCHAR2(50 BYTE) DEFAULT 'SYSTEM', 
	"B01_FEC_CRE" DATE DEFAULT SYSDATE, 
	"B01_USU_MOD" VARCHAR2(50 BYTE), 
	"B01_FEC_MOD" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "BN_MAIE_DATA" ;

   COMMENT ON COLUMN "BN_MAIE"."BNMAIE01_ENTIDAD"."B01_ID_ENTIDAD" IS 'Clave Primaria. Identificador único y legible para la entidad. Ej: VISA_PAGOS, RENIEC_CONSULTA.';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE01_ENTIDAD"."B01_DESCRIPCION" IS 'Descripción funcional de la entidad.';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE01_ENTIDAD"."B01_TIPO_COMUNICACION" IS 'Define el protocolo de comunicación principal (1:REST, 2:SOAP, 3:MQ).';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE01_ENTIDAD"."B01_TIPO_TRAMA_BN" IS 'Define si la estructura de la trama desde el BANCO para la entidad (1: Estandar, 2:Custom).';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE01_ENTIDAD"."B01_TIPO_TRAMA_EX" IS 'Define si la estructura de la trama externa  (1: JSON, 2:XML).';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE01_ENTIDAD"."B01_IND_MAPEO" IS 'Indicador booleano (1=SI, 0=NO) que determina si la entidad requiere un proceso de transformación/mapeo de datos.';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE01_ENTIDAD"."B01_ESTADO" IS 'Indicador de estado (1=Activo, 0=Inactivo). Permite desactivar la entidad sin borrarla.';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE01_ENTIDAD"."B01_USU_CRE" IS 'Usuario que creó el registro.';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE01_ENTIDAD"."B01_FEC_CRE" IS 'Fecha de creación del registro.';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE01_ENTIDAD"."B01_USU_MOD" IS 'Usuario de la última modificación.';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE01_ENTIDAD"."B01_FEC_MOD" IS 'Fecha de la última modificación.';
   COMMENT ON TABLE "BN_MAIE"."BNMAIE01_ENTIDAD"  IS 'Almacena la configuración maestra de las entidades externas con las que se comunica el sistema.';
--------------------------------------------------------
--  DDL for Table BNMAIE02_OPERACION
--------------------------------------------------------

  CREATE TABLE "BN_MAIE"."BNMAIE02_OPERACION" 
   (	"B02_ID_OPERACION" NUMBER(10,0), 
	"B01_ID_ENTIDAD" VARCHAR2(50 BYTE), 
	"B07_ID_CONEXION" NUMBER(10,0), 
	"B02_DESCRIPCION" VARCHAR2(250 BYTE), 
	"B02_REQUIERE_BODY_ENVIO" NUMBER(1,0) DEFAULT 0, 
	"B02_USU_CRE" VARCHAR2(50 BYTE) DEFAULT 'SYSTEM', 
	"B02_FEC_CRE" DATE DEFAULT SYSDATE, 
	"B02_USU_MOD" VARCHAR2(50 BYTE), 
	"B02_FEC_MOD" DATE, 
	"B02_COD_OPERACION" VARCHAR2(4 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "BN_MAIE_DATA" ;

   COMMENT ON COLUMN "BN_MAIE"."BNMAIE02_OPERACION"."B02_ID_OPERACION" IS 'Clave Primaria. Identificador numérico único para la operación, generado por secuencia.';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE02_OPERACION"."B01_ID_ENTIDAD" IS 'Clave Foránea que vincula la operación con la entidad en BNMAIE01_ENTIDAD. Parte de la clave primaria compuesta.';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE02_OPERACION"."B07_ID_CONEXION" IS 'Clave Foránea que vincula la operación con una configuración de conexión específica en BNMAIE07_CONEXION.';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE02_OPERACION"."B02_DESCRIPCION" IS 'Descripción funcional de la operación.';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE02_OPERACION"."B02_REQUIERE_BODY_ENVIO" IS 'Indica si la operación requiere enviar un cuerpo (body) en la petición (1=SI, 0=NO).';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE02_OPERACION"."B02_USU_CRE" IS 'Usuario que creó el registro.';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE02_OPERACION"."B02_FEC_CRE" IS 'Fecha de creación del registro.';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE02_OPERACION"."B02_USU_MOD" IS 'Usuario de la última modificación.';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE02_OPERACION"."B02_FEC_MOD" IS 'Fecha de la última modificación.';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE02_OPERACION"."B02_COD_OPERACION" IS 'Código de operación específico (ej. 0001, 0002, 0008, 0018). Parte de la clave única compuesta con B01_ID_ENTIDAD.';
   COMMENT ON TABLE "BN_MAIE"."BNMAIE02_OPERACION"  IS 'Define las operaciones específicas (pago, consulta, etc.) para cada entidad y su conectividad.';
--------------------------------------------------------
--  DDL for Table BNMAIE04_PARAMETRO
--------------------------------------------------------

  CREATE TABLE "BN_MAIE"."BNMAIE04_PARAMETRO" 
   (	"B04_ID_PARA" NUMBER(10,0), 
	"B04_COD_GRUP" NUMBER(10,0), 
	"B04_COD_PARA" NUMBER(10,0), 
	"B04_IND_ACT" NUMBER(1,0) DEFAULT 1, 
	"B04_DESCRIP" VARCHAR2(150 BYTE), 
	"B04_FEC_CRE" DATE DEFAULT SYSDATE, 
	"B04_FEC_MOD" DATE, 
	"B04_USU_CRE" VARCHAR2(50 BYTE) DEFAULT 'SYSTEM', 
	"B04_USU_MOD" VARCHAR2(50 BYTE) DEFAULT 'SYSTEM', 
	"B04_VAL_01" VARCHAR2(255 BYTE), 
	"B04_VAL_02" VARCHAR2(255 BYTE), 
	"B04_VAL_03" CLOB, 
	"B04_COD_OPER" NUMBER(10,0), 
	"B01_ID_ENTIDAD_FK" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  TABLESPACE "BN_MAIE_DATA" 
 LOB ("B04_VAL_03") STORE AS SECUREFILE (
  TABLESPACE "BN_MAIE_DATA" ENABLE STORAGE IN ROW CHUNK 8192
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES ) ;

   COMMENT ON COLUMN "BN_MAIE"."BNMAIE04_PARAMETRO"."B04_ID_PARA" IS 'Identificador único del parámetro';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE04_PARAMETRO"."B04_COD_GRUP" IS 'Código de grupo para categorizar parámetros (ej. 100=REST_URL, 200=REST_HEADER, 300=SOAP_CONFIG, 400=MQ_CONFIG).';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE04_PARAMETRO"."B04_COD_PARA" IS 'Código único del parámetro dentro de su grupo y operación (ej. 1=PATH, 2=HTTP_METHOD, 3=SOAP_ACTION, 4=QUEUE_MANAGER, 5=PLANTILLA_ENVIO, 6=PLANTILLA_RESPUESTA).';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE04_PARAMETRO"."B04_IND_ACT" IS 'Estado del parámetro (1=Activo, 0=Inactivo)';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE04_PARAMETRO"."B04_DESCRIP" IS 'Descripción del parámetro';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE04_PARAMETRO"."B04_FEC_CRE" IS 'Fecha de creación del parámetro';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE04_PARAMETRO"."B04_FEC_MOD" IS 'Fecha de última modificación del parámetro';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE04_PARAMETRO"."B04_USU_CRE" IS 'Usuario que creó el parámetro';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE04_PARAMETRO"."B04_USU_MOD" IS 'Usuario que modificó el parámetro';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE04_PARAMETRO"."B04_VAL_01" IS 'Primer valor asociado al parámetro (ej. valor de un header, nombre de un campo, una URL base, un nombre de cola).';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE04_PARAMETRO"."B04_VAL_02" IS 'Segundo valor asociado al parámetro (opcional, ej. para valores de un header si VAL_01 es la clave, o para un valor adicional de configuración).';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE04_PARAMETRO"."B04_VAL_03" IS 'Almacena plantillas de mensajes (JSON, XML) para envío o mapeo, o estructuras de respuesta esperadas.';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE04_PARAMETRO"."B04_COD_OPER" IS 'Código de la operación asociada al parámetro (parte de la clave foránea compuesta a BNMAIE02_OPERACION).';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE04_PARAMETRO"."B01_ID_ENTIDAD_FK" IS 'Identificador de la entidad asociada a la operación (parte de la clave foránea compuesta a BNMAIE02_OPERACION).';
--------------------------------------------------------
--  DDL for Table BNMAIE05_AUDITORIA
--------------------------------------------------------

  CREATE TABLE "BN_MAIE"."BNMAIE05_AUDITORIA" 
   (	"F05_ID" NUMBER(10,0), 
	"F05_COD_APLI" VARCHAR2(10 BYTE), 
	"F05_COD_CAJERO" VARCHAR2(10 BYTE), 
	"F05_COD_CANAL" VARCHAR2(10 BYTE), 
	"F05_TXT_DATA" CLOB, 
	"F05_COD_ENT" VARCHAR2(10 BYTE), 
	"F05_FEC_LOG" DATE, 
	"F05_FEC_PROCESO" DATE, 
	"F05_HOR_LOG" VARCHAR2(8 BYTE), 
	"F05_COD_OPER" VARCHAR2(10 BYTE), 
	"F05_COD_RETORNO" VARCHAR2(10 BYTE), 
	"F05_TIP_OPER" VARCHAR2(10 BYTE), 
	"F05_COD_TRAN" VARCHAR2(10 BYTE)
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  TABLESPACE "BN_MAIE_DATA" 
 LOB ("F05_TXT_DATA") STORE AS SECUREFILE (
  TABLESPACE "BN_MAIE_DATA" ENABLE STORAGE IN ROW CHUNK 8192
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES ) ;

   COMMENT ON COLUMN "BN_MAIE"."BNMAIE05_AUDITORIA"."F05_ID" IS 'Identificador único del registro de auditoría';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE05_AUDITORIA"."F05_COD_APLI" IS 'Código de la aplicación emisora del evento';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE05_AUDITORIA"."F05_COD_CAJERO" IS 'Código del cajero que ejecutó la transacción';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE05_AUDITORIA"."F05_COD_CANAL" IS 'Código del canal desde donde se ejecutó la operación';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE05_AUDITORIA"."F05_TXT_DATA" IS 'Contenido XML/JSON o datos relevantes del request/response';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE05_AUDITORIA"."F05_COD_ENT" IS 'Código de la entidad objetivo de la transacción';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE05_AUDITORIA"."F05_FEC_LOG" IS 'Fecha en que se generó el log (formato DATE)';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE05_AUDITORIA"."F05_FEC_PROCESO" IS 'Fecha y hora exacta en que se procesó la operación';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE05_AUDITORIA"."F05_HOR_LOG" IS 'Hora exacta del evento (formato HH:mm:ss)';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE05_AUDITORIA"."F05_COD_OPER" IS 'Código de la operación realizada';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE05_AUDITORIA"."F05_COD_RETORNO" IS 'Código de retorno o estado de la transacción';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE05_AUDITORIA"."F05_TIP_OPER" IS 'Tipo de operación realizada ';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE05_AUDITORIA"."F05_COD_TRAN" IS 'Código de la transacción ejecutada';
--------------------------------------------------------
--  DDL for Table BNMAIE07_CONEXION
--------------------------------------------------------

  CREATE TABLE "BN_MAIE"."BNMAIE07_CONEXION" 
   (	"B07_ID_CONEXION" NUMBER(10,0), 
	"B01_ID_ENTIDAD" VARCHAR2(50 BYTE), 
	"B07_PROTOCOLO" VARCHAR2(10 BYTE), 
	"B07_HOST" VARCHAR2(255 BYTE), 
	"B07_PUERTO" NUMBER(5,0), 
	"B07_USA_TLS" NUMBER(1,0) DEFAULT 1, 
	"B07_IND_CREDENCIALES" NUMBER(1,0) DEFAULT 0, 
	"B07_TIMEOUT_CONEXION_MS" NUMBER(6,0) DEFAULT 5000, 
	"B07_TIMEOUT_LECTURA_MS" NUMBER(6,0) DEFAULT 10000, 
	"B07_MAX_REINTENTOS" NUMBER(2,0) DEFAULT 3, 
	"B07_REINTENTO_ESPERA_MS" NUMBER(6,0) DEFAULT 1000, 
	"B07_USU_CRE" VARCHAR2(50 BYTE) DEFAULT 'SYSTEM', 
	"B07_FEC_CRE" DATE DEFAULT SYSDATE, 
	"B07_USU_MOD" VARCHAR2(50 BYTE), 
	"B07_FEC_MOD" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "BN_MAIE_DATA" ;

   COMMENT ON COLUMN "BN_MAIE"."BNMAIE07_CONEXION"."B07_ID_CONEXION" IS 'Clave Primaria. Identificador único para el registro de conexión.';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE07_CONEXION"."B01_ID_ENTIDAD" IS 'Clave Foránea que vincula esta conexión con una entidad de la tabla BNMAIE01_ENTIDAD.';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE07_CONEXION"."B07_PROTOCOLO" IS 'Protocolo de red a utilizar: 1=HTTP, 2=HTTPS, 3=TCP, 4=UDP, 5=MQ (para servidores de colas)';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE07_CONEXION"."B07_HOST" IS 'Dirección IP o nombre de dominio del servidor de la entidad externa.';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE07_CONEXION"."B07_PUERTO" IS 'Puerto de escucha en el servidor de la entidad externa.';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE07_CONEXION"."B07_USA_TLS" IS 'Indicador (1=SI, 0=NO) si la conexión debe usar encriptación TLS. Esencial para HTTPS.';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE07_CONEXION"."B07_IND_CREDENCIALES" IS 'Indicador (1=SI, 0=NO) si la conexión requiere credenciales (API Keys, Basic Auth, OAuth) que deben ser recuperadas de una bóveda segura.';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE07_CONEXION"."B07_TIMEOUT_CONEXION_MS" IS 'Tiempo máximo en milisegundos para establecer la conexión inicial.';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE07_CONEXION"."B07_TIMEOUT_LECTURA_MS" IS 'Tiempo máximo en milisegundos para esperar una respuesta después de enviar la petición.';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE07_CONEXION"."B07_MAX_REINTENTOS" IS 'Número máximo de reintentos en caso de fallo en la conexión.';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE07_CONEXION"."B07_REINTENTO_ESPERA_MS" IS 'Tiempo de espera en milisegundos entre cada reintento (backoff).';
   COMMENT ON TABLE "BN_MAIE"."BNMAIE07_CONEXION"  IS 'Almacena los parámetros técnicos de conectividad para cada entidad externa.';
--------------------------------------------------------
--  DDL for Table BNMAIE08_CAMPO_TRAMA
--------------------------------------------------------

  CREATE TABLE "BN_MAIE"."BNMAIE08_CAMPO_TRAMA" 
   (	"B08_ID_CAMPO_TRAMA" NUMBER(10,0), 
	"B02_ID_OPERACION" NUMBER(10,0), 
	"B01_ID_ENTIDAD" VARCHAR2(50 BYTE), 
	"B08_TAG_NAME" VARCHAR2(100 BYTE), 
	"B08_ORDEN" NUMBER(5,0), 
	"B08_TIPO_ORIGEN" NUMBER(1,0), 
	"B08_TIPO_CAMPO" NUMBER(1,0), 
	"B08_TIPO_DATO" VARCHAR2(10 BYTE), 
	"B08_LONGITUD" NUMBER(5,0), 
	"B08_IND_RELLENO" NUMBER(1,0) DEFAULT 0, 
	"B08_VALOR_RELLENO" VARCHAR2(10 BYTE), 
	"B08_VALOR_DEFECTO" VARCHAR2(255 BYTE), 
	"B08_USU_CRE" VARCHAR2(50 BYTE) DEFAULT 'SYSTEM', 
	"B08_FEC_CRE" DATE DEFAULT SYSDATE, 
	"B08_USU_MOD" VARCHAR2(50 BYTE), 
	"B08_FEC_MOD" DATE, 
	"B08_ALINEACION" NUMBER(1,0) DEFAULT 1
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "BN_MAIE_DATA" ;

   COMMENT ON COLUMN "BN_MAIE"."BNMAIE08_CAMPO_TRAMA"."B08_ID_CAMPO_TRAMA" IS 'Clave Primaria. Identificador único para la definición del campo de trama.';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE08_CAMPO_TRAMA"."B02_ID_OPERACION" IS 'Clave Foránea que vincula el campo de trama a una operación específica en BNMAIE02_OPERACION.';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE08_CAMPO_TRAMA"."B01_ID_ENTIDAD" IS 'Clave Foránea que vincula el campo de trama a la entidad de la operación en BNMAIE01_ENTIDAD. Parte de la clave foránea compuesta.';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE08_CAMPO_TRAMA"."B08_TAG_NAME" IS 'Nombre lógico del campo en la trama (ej. "monto", "fechaTransaccion").';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE08_CAMPO_TRAMA"."B08_ORDEN" IS 'Orden secuencial del campo dentro de la trama o estructura.';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE08_CAMPO_TRAMA"."B08_TIPO_ORIGEN" IS 'Indica si el campo pertenece a la trama de Request (1) o Response (2).';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE08_CAMPO_TRAMA"."B08_TIPO_CAMPO" IS 'Clasificación general del campo (1: Cadena, 2: Entero, 3: Decimal).';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE08_CAMPO_TRAMA"."B08_TIPO_DATO" IS 'Tipo de dato específico del campo (N: Numérico, A: Alfabético, AN: Alfanumérico, D: Fecha).';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE08_CAMPO_TRAMA"."B08_LONGITUD" IS 'Longitud esperada del campo en la trama de origen.';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE08_CAMPO_TRAMA"."B08_IND_RELLENO" IS 'Indicador (0=NO, 1=SI) si se debe aplicar un valor de relleno al campo.';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE08_CAMPO_TRAMA"."B08_VALOR_RELLENO" IS 'Carácter o cadena utilizada para rellenar el campo si es necesario (ej. "0", " ").';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE08_CAMPO_TRAMA"."B08_VALOR_DEFECTO" IS 'Valor por defecto a asignar al campo si no se recibe o está vacío.';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE08_CAMPO_TRAMA"."B08_USU_CRE" IS 'Usuario que creó el registro.';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE08_CAMPO_TRAMA"."B08_FEC_CRE" IS 'Fecha de creación del registro.';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE08_CAMPO_TRAMA"."B08_USU_MOD" IS 'Usuario de la última modificación.';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE08_CAMPO_TRAMA"."B08_FEC_MOD" IS 'Fecha de la última modificación.';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE08_CAMPO_TRAMA"."B08_ALINEACION" IS 'Indica la alineacion del campo para el response 1: derecha 2:izquierda';
   COMMENT ON TABLE "BN_MAIE"."BNMAIE08_CAMPO_TRAMA"  IS 'Define la estructura y propiedades de los campos dentro de las tramas de comunicación (request/response) de una operación.';
--------------------------------------------------------
--  DDL for Table BNMAIE09_LLAVE_BODY
--------------------------------------------------------

  CREATE TABLE "BN_MAIE"."BNMAIE09_LLAVE_BODY" 
   (	"B09_ID_LLAVE_BODY" NUMBER(10,0), 
	"B02_ID_OPERACION" NUMBER(10,0), 
	"B01_ID_ENTIDAD" VARCHAR2(50 BYTE), 
	"B09_TAG_NAME" VARCHAR2(100 BYTE), 
	"B09_TIPO_ORIGEN" NUMBER(1,0), 
	"B09_ID_LLAVE_PADRE" NUMBER(10,0), 
	"B09_TIPO_DATO_ESPERADO" NUMBER(1,0), 
	"B09_ES_PADRE" NUMBER(1,0) DEFAULT 0, 
	"B09_VALOR_DEFECTO" VARCHAR2(255 BYTE), 
	"B09_ORDEN" NUMBER(5,0), 
	"B09_IND_OBLIGATORIO" NUMBER(1,0) DEFAULT 0, 
	"B09_DESCRIPCION" VARCHAR2(250 BYTE), 
	"B09_IND_MAPEABLE" NUMBER(1,0) DEFAULT 0, 
	"B09_USU_CRE" VARCHAR2(50 BYTE) DEFAULT 'SYSTEM', 
	"B09_FEC_CRE" DATE DEFAULT SYSDATE, 
	"B09_USU_MOD" VARCHAR2(50 BYTE), 
	"B09_FEC_MOD" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "BN_MAIE_DATA" ;

   COMMENT ON COLUMN "BN_MAIE"."BNMAIE09_LLAVE_BODY"."B09_ID_LLAVE_BODY" IS 'Clave Primaria. Identificador único para la definición de la llave del cuerpo.';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE09_LLAVE_BODY"."B02_ID_OPERACION" IS 'Clave Foránea que vincula la llave del cuerpo a una operación específica en BNMAIE02_OPERACION.';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE09_LLAVE_BODY"."B01_ID_ENTIDAD" IS 'Clave Foránea que vincula la llave del cuerpo a la entidad de la operación en BNMAIE01_ENTIDAD. Parte de la clave foránea compuesta.';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE09_LLAVE_BODY"."B09_TAG_NAME" IS 'Nombre de la llave/campo en el cuerpo (ej. "monto", "cliente", "items").';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE09_LLAVE_BODY"."B09_TIPO_ORIGEN" IS 'Indica si la llave pertenece al cuerpo de Request (1) o Response (2).';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE09_LLAVE_BODY"."B09_ID_LLAVE_PADRE" IS 'Clave Foránea auto-referenciada al B09_ID_LLAVE_BODY de la llave padre. NULL si es una llave de nivel raíz.';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE09_LLAVE_BODY"."B09_TIPO_DATO_ESPERADO" IS 'Tipo de dato esperado para esta llave (1: String, 2: Integer, 3: Decimal, 4: Boolean, 5: Object, 6: Array).';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE09_LLAVE_BODY"."B09_ES_PADRE" IS 'Indica si la llave es un contenedor (1: Padre - Object/Array) o un valor primitivo (0: Hijo).';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE09_LLAVE_BODY"."B09_VALOR_DEFECTO" IS 'Valor por defecto a asignar a la llave si no se proporciona.';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE09_LLAVE_BODY"."B09_ORDEN" IS 'Orden secuencial de la llave dentro de su nivel o de su llave padre.';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE09_LLAVE_BODY"."B09_IND_OBLIGATORIO" IS 'Indicador (0=NO, 1=SI) si la llave es obligatoria en el cuerpo.';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE09_LLAVE_BODY"."B09_DESCRIPCION" IS 'Descripción funcional de la llave.';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE09_LLAVE_BODY"."B09_IND_MAPEABLE" IS 'Indicador (0=NO, 1=SI) si esta llave puede ser mapeada desde/hacia un campo de la tabla BNMAIE05_CAMPO_TRAMA.';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE09_LLAVE_BODY"."B09_USU_CRE" IS 'Usuario que creó el registro.';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE09_LLAVE_BODY"."B09_FEC_CRE" IS 'Fecha de creación del registro.';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE09_LLAVE_BODY"."B09_USU_MOD" IS 'Usuario de la última modificación.';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE09_LLAVE_BODY"."B09_FEC_MOD" IS 'Fecha de la última modificación.';
   COMMENT ON TABLE "BN_MAIE"."BNMAIE09_LLAVE_BODY"  IS 'Define la estructura de las llaves/campos dentro de los cuerpos (JSON/XML) de las tramas de comunicación (request/response).';
--------------------------------------------------------
--  DDL for Table BNMAIE10_MAPEO
--------------------------------------------------------

  CREATE TABLE "BN_MAIE"."BNMAIE10_MAPEO" 
   (	"B10_ID_MAPEO" NUMBER(10,0), 
	"B02_ID_OPERACION" NUMBER(10,0), 
	"B01_ID_ENTIDAD" VARCHAR2(50 BYTE), 
	"B08_ID_CAMPO_TRAMA" NUMBER(10,0), 
	"B09_ID_LLAVE_BODY" NUMBER(10,0), 
	"B10_IND_TRANSFORMACION" NUMBER(1,0) DEFAULT 0, 
	"B10_EXPRESION_TRANSFORM" VARCHAR2(500 BYTE), 
	"B10_IND_TRIM" NUMBER(1,0) DEFAULT 0, 
	"B10_IND_AUTOCOMPLETAR" NUMBER(1,0) DEFAULT 0, 
	"B10_VALOR_AUTOCOMPLETAR" VARCHAR2(255 BYTE), 
	"B10_DESCRIPCION" VARCHAR2(250 BYTE), 
	"B10_USU_CRE" VARCHAR2(50 BYTE) DEFAULT 'SYSTEM', 
	"B10_FEC_CRE" DATE DEFAULT SYSDATE, 
	"B10_USU_MOD" VARCHAR2(50 BYTE), 
	"B10_FEC_MOD" DATE
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  TABLESPACE "BN_MAIE_DATA" ;

   COMMENT ON COLUMN "BN_MAIE"."BNMAIE10_MAPEO"."B10_ID_MAPEO" IS 'Clave Primaria. Identificador único para el registro de mapeo.';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE10_MAPEO"."B02_ID_OPERACION" IS 'Clave Foránea que vincula el mapeo a una operación específica en BNMAIE02_OPERACION.';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE10_MAPEO"."B01_ID_ENTIDAD" IS 'Clave Foránea que vincula el mapeo a la entidad de la operación en BNMAIE01_ENTIDAD. Parte de la clave foránea compuesta.';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE10_MAPEO"."B08_ID_CAMPO_TRAMA" IS 'Clave Foránea que identifica el campo de la trama de origen en BNMAIE08_CAMPO_TRAMA.';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE10_MAPEO"."B09_ID_LLAVE_BODY" IS 'Clave Foránea que identifica la llave del cuerpo de destino en BNMAIE09_LLAVE_BODY.';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE10_MAPEO"."B10_IND_TRANSFORMACION" IS 'Indicador (0=NO, 1=SI) si se debe aplicar una transformación al valor mapeado.';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE10_MAPEO"."B10_EXPRESION_TRANSFORM" IS 'Expresión o regla para la transformación del valor (ej. "DD-MM-YYYY", "TO_NUMBER", "TRUNCATE(2)"). Puede hacer referencia a parámetros en BNMAIE04_PARAMETRO.';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE10_MAPEO"."B10_IND_TRIM" IS 'Indicador (0=NO, 1=SI) si se debe aplicar la función TRIM al valor antes o después de la transformación.';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE10_MAPEO"."B10_IND_AUTOCOMPLETAR" IS 'Indicador (0=NO, 1=SI) si el campo/llave debe ser autocompletado con un valor específico si está vacío.';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE10_MAPEO"."B10_VALOR_AUTOCOMPLETAR" IS 'Valor utilizado para autocompletar el campo/llave si B10_IND_AUTOCOMPLETAR es 1.';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE10_MAPEO"."B10_DESCRIPCION" IS 'Descripción del propósito o la lógica de este mapeo.';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE10_MAPEO"."B10_USU_CRE" IS 'Usuario que creó el registro.';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE10_MAPEO"."B10_FEC_CRE" IS 'Fecha de creación del registro.';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE10_MAPEO"."B10_USU_MOD" IS 'Usuario de la última modificación.';
   COMMENT ON COLUMN "BN_MAIE"."BNMAIE10_MAPEO"."B10_FEC_MOD" IS 'Fecha de la última modificación.';
   COMMENT ON TABLE "BN_MAIE"."BNMAIE10_MAPEO"  IS 'Define las reglas de mapeo y transformación entre los campos de las tramas (BNMAIE08_CAMPO_TRAMA) y las llaves de los cuerpos JSON/XML (BNMAIE09_LLAVE_BODY).';
REM INSERTING into BN_MAIE.BNMAIE01_ENTIDAD
SET DEFINE OFF;
Insert into BN_MAIE.BNMAIE01_ENTIDAD (B01_ID_ENTIDAD,B01_DESCRIPCION,B01_TIPO_COMUNICACION,B01_TIPO_TRAMA_BN,B01_TIPO_TRAMA_EX,B01_IND_MAPEO,B01_ESTADO,B01_USU_CRE,B01_FEC_CRE,B01_USU_MOD,B01_FEC_MOD) values ('1001','Nuevo sistema Comercial Sedapal','1','1','1','1','0','SYSTEM',to_date('03/07/25','DD/MM/RR'),'SYSTEM',to_date('07/07/25','DD/MM/RR'));
Insert into BN_MAIE.BNMAIE01_ENTIDAD (B01_ID_ENTIDAD,B01_DESCRIPCION,B01_TIPO_COMUNICACION,B01_TIPO_TRAMA_BN,B01_TIPO_TRAMA_EX,B01_IND_MAPEO,B01_ESTADO,B01_USU_CRE,B01_FEC_CRE,B01_USU_MOD,B01_FEC_MOD) values ('6080','Osinerming','2','1','2','0','1','SYSTEM',to_date('03/07/25','DD/MM/RR'),null,null);
REM INSERTING into BN_MAIE.BNMAIE02_OPERACION
SET DEFINE OFF;
Insert into BN_MAIE.BNMAIE02_OPERACION (B02_ID_OPERACION,B01_ID_ENTIDAD,B07_ID_CONEXION,B02_DESCRIPCION,B02_REQUIERE_BODY_ENVIO,B02_USU_CRE,B02_FEC_CRE,B02_USU_MOD,B02_FEC_MOD,B02_COD_OPERACION) values ('44','1001','2','extorno Sedapal','1','SYSTEM',to_date('03/07/25','DD/MM/RR'),null,null,'0003');
Insert into BN_MAIE.BNMAIE02_OPERACION (B02_ID_OPERACION,B01_ID_ENTIDAD,B07_ID_CONEXION,B02_DESCRIPCION,B02_REQUIERE_BODY_ENVIO,B02_USU_CRE,B02_FEC_CRE,B02_USU_MOD,B02_FEC_MOD,B02_COD_OPERACION) values ('42','1001','2','Consulta Sedapal','0','SYSTEM',to_date('03/07/25','DD/MM/RR'),null,null,'0001');
Insert into BN_MAIE.BNMAIE02_OPERACION (B02_ID_OPERACION,B01_ID_ENTIDAD,B07_ID_CONEXION,B02_DESCRIPCION,B02_REQUIERE_BODY_ENVIO,B02_USU_CRE,B02_FEC_CRE,B02_USU_MOD,B02_FEC_MOD,B02_COD_OPERACION) values ('43','1001','2','Pago Sedapal','1','SYSTEM',to_date('03/07/25','DD/MM/RR'),null,null,'0002');
REM INSERTING into BN_MAIE.BNMAIE04_PARAMETRO
SET DEFINE OFF;
REM INSERTING into BN_MAIE.BNMAIE05_AUDITORIA
SET DEFINE OFF;
REM INSERTING into BN_MAIE.BNMAIE07_CONEXION
SET DEFINE OFF;
Insert into BN_MAIE.BNMAIE07_CONEXION (B07_ID_CONEXION,B01_ID_ENTIDAD,B07_PROTOCOLO,B07_HOST,B07_PUERTO,B07_USA_TLS,B07_IND_CREDENCIALES,B07_TIMEOUT_CONEXION_MS,B07_TIMEOUT_LECTURA_MS,B07_MAX_REINTENTOS,B07_REINTENTO_ESPERA_MS,B07_USU_CRE,B07_FEC_CRE,B07_USU_MOD,B07_FEC_MOD) values ('2','1001','2','10.7.12.80','443','0','0','3000','4000','3','1000','SYSTEM',to_date('03/07/25','DD/MM/RR'),null,null);
Insert into BN_MAIE.BNMAIE07_CONEXION (B07_ID_CONEXION,B01_ID_ENTIDAD,B07_PROTOCOLO,B07_HOST,B07_PUERTO,B07_USA_TLS,B07_IND_CREDENCIALES,B07_TIMEOUT_CONEXION_MS,B07_TIMEOUT_LECTURA_MS,B07_MAX_REINTENTOS,B07_REINTENTO_ESPERA_MS,B07_USU_CRE,B07_FEC_CRE,B07_USU_MOD,B07_FEC_MOD) values ('3','6080','1','172.26.1.25','9505','0','0','5000','5000','3','1000','SYSTEM',to_date('03/07/25','DD/MM/RR'),null,null);
REM INSERTING into BN_MAIE.BNMAIE08_CAMPO_TRAMA
SET DEFINE OFF;
Insert into BN_MAIE.BNMAIE08_CAMPO_TRAMA (B08_ID_CAMPO_TRAMA,B02_ID_OPERACION,B01_ID_ENTIDAD,B08_TAG_NAME,B08_ORDEN,B08_TIPO_ORIGEN,B08_TIPO_CAMPO,B08_TIPO_DATO,B08_LONGITUD,B08_IND_RELLENO,B08_VALOR_RELLENO,B08_VALOR_DEFECTO,B08_USU_CRE,B08_FEC_CRE,B08_USU_MOD,B08_FEC_MOD,B08_ALINEACION) values ('33','42','1001','HORA-EMISION','3','2','2','N','6','0',null,null,'SYSTEM',to_date('04/07/25','DD/MM/RR'),null,null,'1');
Insert into BN_MAIE.BNMAIE08_CAMPO_TRAMA (B08_ID_CAMPO_TRAMA,B02_ID_OPERACION,B01_ID_ENTIDAD,B08_TAG_NAME,B08_ORDEN,B08_TIPO_ORIGEN,B08_TIPO_CAMPO,B08_TIPO_DATO,B08_LONGITUD,B08_IND_RELLENO,B08_VALOR_RELLENO,B08_VALOR_DEFECTO,B08_USU_CRE,B08_FEC_CRE,B08_USU_MOD,B08_FEC_MOD,B08_ALINEACION) values ('34','42','1001','RUC-EMISOR','4','2','1','AN','11','0',null,null,'SYSTEM',to_date('04/07/25','DD/MM/RR'),null,null,'2');
Insert into BN_MAIE.BNMAIE08_CAMPO_TRAMA (B08_ID_CAMPO_TRAMA,B02_ID_OPERACION,B01_ID_ENTIDAD,B08_TAG_NAME,B08_ORDEN,B08_TIPO_ORIGEN,B08_TIPO_CAMPO,B08_TIPO_DATO,B08_LONGITUD,B08_IND_RELLENO,B08_VALOR_RELLENO,B08_VALOR_DEFECTO,B08_USU_CRE,B08_FEC_CRE,B08_USU_MOD,B08_FEC_MOD,B08_ALINEACION) values ('35','42','1001','RAZON-SOCIAL-EMISOR','5','2','1','AN','60','0',null,null,'SYSTEM',to_date('04/07/25','DD/MM/RR'),null,null,'2');
Insert into BN_MAIE.BNMAIE08_CAMPO_TRAMA (B08_ID_CAMPO_TRAMA,B02_ID_OPERACION,B01_ID_ENTIDAD,B08_TAG_NAME,B08_ORDEN,B08_TIPO_ORIGEN,B08_TIPO_CAMPO,B08_TIPO_DATO,B08_LONGITUD,B08_IND_RELLENO,B08_VALOR_RELLENO,B08_VALOR_DEFECTO,B08_USU_CRE,B08_FEC_CRE,B08_USU_MOD,B08_FEC_MOD,B08_ALINEACION) values ('36','42','1001','RUC-RECEPTOR','6','2','1','AN','11','0',null,null,'SYSTEM',to_date('04/07/25','DD/MM/RR'),null,null,'2');
Insert into BN_MAIE.BNMAIE08_CAMPO_TRAMA (B08_ID_CAMPO_TRAMA,B02_ID_OPERACION,B01_ID_ENTIDAD,B08_TAG_NAME,B08_ORDEN,B08_TIPO_ORIGEN,B08_TIPO_CAMPO,B08_TIPO_DATO,B08_LONGITUD,B08_IND_RELLENO,B08_VALOR_RELLENO,B08_VALOR_DEFECTO,B08_USU_CRE,B08_FEC_CRE,B08_USU_MOD,B08_FEC_MOD,B08_ALINEACION) values ('37','42','1001','RAZON-SOCIAL-RECEPTOR','7','2','1','AN','60','0',null,null,'SYSTEM',to_date('04/07/25','DD/MM/RR'),null,null,'2');
Insert into BN_MAIE.BNMAIE08_CAMPO_TRAMA (B08_ID_CAMPO_TRAMA,B02_ID_OPERACION,B01_ID_ENTIDAD,B08_TAG_NAME,B08_ORDEN,B08_TIPO_ORIGEN,B08_TIPO_CAMPO,B08_TIPO_DATO,B08_LONGITUD,B08_IND_RELLENO,B08_VALOR_RELLENO,B08_VALOR_DEFECTO,B08_USU_CRE,B08_FEC_CRE,B08_USU_MOD,B08_FEC_MOD,B08_ALINEACION) values ('38','42','1001','DIRECCION-RECEPTOR','8','2','1','AN','80','0',null,null,'SYSTEM',to_date('04/07/25','DD/MM/RR'),null,null,'2');
Insert into BN_MAIE.BNMAIE08_CAMPO_TRAMA (B08_ID_CAMPO_TRAMA,B02_ID_OPERACION,B01_ID_ENTIDAD,B08_TAG_NAME,B08_ORDEN,B08_TIPO_ORIGEN,B08_TIPO_CAMPO,B08_TIPO_DATO,B08_LONGITUD,B08_IND_RELLENO,B08_VALOR_RELLENO,B08_VALOR_DEFECTO,B08_USU_CRE,B08_FEC_CRE,B08_USU_MOD,B08_FEC_MOD,B08_ALINEACION) values ('39','42','1001','CANT-ITEMS','9','2','2','N','3','0',null,null,'SYSTEM',to_date('04/07/25','DD/MM/RR'),null,null,'1');
Insert into BN_MAIE.BNMAIE08_CAMPO_TRAMA (B08_ID_CAMPO_TRAMA,B02_ID_OPERACION,B01_ID_ENTIDAD,B08_TAG_NAME,B08_ORDEN,B08_TIPO_ORIGEN,B08_TIPO_CAMPO,B08_TIPO_DATO,B08_LONGITUD,B08_IND_RELLENO,B08_VALOR_RELLENO,B08_VALOR_DEFECTO,B08_USU_CRE,B08_FEC_CRE,B08_USU_MOD,B08_FEC_MOD,B08_ALINEACION) values ('40','42','1001','COD-ITEM','10','2','1','AN','10','0',null,null,'SYSTEM',to_date('04/07/25','DD/MM/RR'),null,null,'2');
Insert into BN_MAIE.BNMAIE08_CAMPO_TRAMA (B08_ID_CAMPO_TRAMA,B02_ID_OPERACION,B01_ID_ENTIDAD,B08_TAG_NAME,B08_ORDEN,B08_TIPO_ORIGEN,B08_TIPO_CAMPO,B08_TIPO_DATO,B08_LONGITUD,B08_IND_RELLENO,B08_VALOR_RELLENO,B08_VALOR_DEFECTO,B08_USU_CRE,B08_FEC_CRE,B08_USU_MOD,B08_FEC_MOD,B08_ALINEACION) values ('41','42','1001','DESC-ITEM','11','2','1','AN','40','0',null,null,'SYSTEM',to_date('04/07/25','DD/MM/RR'),null,null,'2');
Insert into BN_MAIE.BNMAIE08_CAMPO_TRAMA (B08_ID_CAMPO_TRAMA,B02_ID_OPERACION,B01_ID_ENTIDAD,B08_TAG_NAME,B08_ORDEN,B08_TIPO_ORIGEN,B08_TIPO_CAMPO,B08_TIPO_DATO,B08_LONGITUD,B08_IND_RELLENO,B08_VALOR_RELLENO,B08_VALOR_DEFECTO,B08_USU_CRE,B08_FEC_CRE,B08_USU_MOD,B08_FEC_MOD,B08_ALINEACION) values ('42','42','1001','CANTIDAD','12','2','2','N','5','0',null,null,'SYSTEM',to_date('04/07/25','DD/MM/RR'),null,null,'1');
Insert into BN_MAIE.BNMAIE08_CAMPO_TRAMA (B08_ID_CAMPO_TRAMA,B02_ID_OPERACION,B01_ID_ENTIDAD,B08_TAG_NAME,B08_ORDEN,B08_TIPO_ORIGEN,B08_TIPO_CAMPO,B08_TIPO_DATO,B08_LONGITUD,B08_IND_RELLENO,B08_VALOR_RELLENO,B08_VALOR_DEFECTO,B08_USU_CRE,B08_FEC_CRE,B08_USU_MOD,B08_FEC_MOD,B08_ALINEACION) values ('43','42','1001','PRECIO-UNIT','13','2','3','N','5','0',null,null,'SYSTEM',to_date('04/07/25','DD/MM/RR'),null,null,'1');
Insert into BN_MAIE.BNMAIE08_CAMPO_TRAMA (B08_ID_CAMPO_TRAMA,B02_ID_OPERACION,B01_ID_ENTIDAD,B08_TAG_NAME,B08_ORDEN,B08_TIPO_ORIGEN,B08_TIPO_CAMPO,B08_TIPO_DATO,B08_LONGITUD,B08_IND_RELLENO,B08_VALOR_RELLENO,B08_VALOR_DEFECTO,B08_USU_CRE,B08_FEC_CRE,B08_USU_MOD,B08_FEC_MOD,B08_ALINEACION) values ('44','42','1001','TOTAL-ITEM','14','2','3','N','7','0',null,null,'SYSTEM',to_date('04/07/25','DD/MM/RR'),null,null,'1');
Insert into BN_MAIE.BNMAIE08_CAMPO_TRAMA (B08_ID_CAMPO_TRAMA,B02_ID_OPERACION,B01_ID_ENTIDAD,B08_TAG_NAME,B08_ORDEN,B08_TIPO_ORIGEN,B08_TIPO_CAMPO,B08_TIPO_DATO,B08_LONGITUD,B08_IND_RELLENO,B08_VALOR_RELLENO,B08_VALOR_DEFECTO,B08_USU_CRE,B08_FEC_CRE,B08_USU_MOD,B08_FEC_MOD,B08_ALINEACION) values ('31','42','1001','ID-FACTURA','1','2','1','AN','10','0','0','10','SYSTEM',to_date('04/07/25','DD/MM/RR'),'SYSTEM',to_date('04/07/25','DD/MM/RR'),'2');
Insert into BN_MAIE.BNMAIE08_CAMPO_TRAMA (B08_ID_CAMPO_TRAMA,B02_ID_OPERACION,B01_ID_ENTIDAD,B08_TAG_NAME,B08_ORDEN,B08_TIPO_ORIGEN,B08_TIPO_CAMPO,B08_TIPO_DATO,B08_LONGITUD,B08_IND_RELLENO,B08_VALOR_RELLENO,B08_VALOR_DEFECTO,B08_USU_CRE,B08_FEC_CRE,B08_USU_MOD,B08_FEC_MOD,B08_ALINEACION) values ('45','42','1001','MONTO-SUBTOTAL','15','2','3','N','9','0',null,null,'SYSTEM',to_date('04/07/25','DD/MM/RR'),null,null,'1');
Insert into BN_MAIE.BNMAIE08_CAMPO_TRAMA (B08_ID_CAMPO_TRAMA,B02_ID_OPERACION,B01_ID_ENTIDAD,B08_TAG_NAME,B08_ORDEN,B08_TIPO_ORIGEN,B08_TIPO_CAMPO,B08_TIPO_DATO,B08_LONGITUD,B08_IND_RELLENO,B08_VALOR_RELLENO,B08_VALOR_DEFECTO,B08_USU_CRE,B08_FEC_CRE,B08_USU_MOD,B08_FEC_MOD,B08_ALINEACION) values ('46','42','1001','MONTO-IGV','16','2','3','N','8','0',null,null,'SYSTEM',to_date('04/07/25','DD/MM/RR'),null,null,'1');
Insert into BN_MAIE.BNMAIE08_CAMPO_TRAMA (B08_ID_CAMPO_TRAMA,B02_ID_OPERACION,B01_ID_ENTIDAD,B08_TAG_NAME,B08_ORDEN,B08_TIPO_ORIGEN,B08_TIPO_CAMPO,B08_TIPO_DATO,B08_LONGITUD,B08_IND_RELLENO,B08_VALOR_RELLENO,B08_VALOR_DEFECTO,B08_USU_CRE,B08_FEC_CRE,B08_USU_MOD,B08_FEC_MOD,B08_ALINEACION) values ('32','42','1001','FECHA-EMISION','2','2','2','N','8','0',null,null,'SYSTEM',to_date('04/07/25','DD/MM/RR'),null,null,'1');
Insert into BN_MAIE.BNMAIE08_CAMPO_TRAMA (B08_ID_CAMPO_TRAMA,B02_ID_OPERACION,B01_ID_ENTIDAD,B08_TAG_NAME,B08_ORDEN,B08_TIPO_ORIGEN,B08_TIPO_CAMPO,B08_TIPO_DATO,B08_LONGITUD,B08_IND_RELLENO,B08_VALOR_RELLENO,B08_VALOR_DEFECTO,B08_USU_CRE,B08_FEC_CRE,B08_USU_MOD,B08_FEC_MOD,B08_ALINEACION) values ('47','42','1001','MONTO-TOTAL','17','2','3','N','10','0',null,null,'SYSTEM',to_date('04/07/25','DD/MM/RR'),null,null,'1');
Insert into BN_MAIE.BNMAIE08_CAMPO_TRAMA (B08_ID_CAMPO_TRAMA,B02_ID_OPERACION,B01_ID_ENTIDAD,B08_TAG_NAME,B08_ORDEN,B08_TIPO_ORIGEN,B08_TIPO_CAMPO,B08_TIPO_DATO,B08_LONGITUD,B08_IND_RELLENO,B08_VALOR_RELLENO,B08_VALOR_DEFECTO,B08_USU_CRE,B08_FEC_CRE,B08_USU_MOD,B08_FEC_MOD,B08_ALINEACION) values ('48','42','1001','TIPO-PAGO','18','2','1','AN','10','0',null,null,'SYSTEM',to_date('04/07/25','DD/MM/RR'),null,null,'2');
Insert into BN_MAIE.BNMAIE08_CAMPO_TRAMA (B08_ID_CAMPO_TRAMA,B02_ID_OPERACION,B01_ID_ENTIDAD,B08_TAG_NAME,B08_ORDEN,B08_TIPO_ORIGEN,B08_TIPO_CAMPO,B08_TIPO_DATO,B08_LONGITUD,B08_IND_RELLENO,B08_VALOR_RELLENO,B08_VALOR_DEFECTO,B08_USU_CRE,B08_FEC_CRE,B08_USU_MOD,B08_FEC_MOD,B08_ALINEACION) values ('49','42','1001','ESTADO-FACTURA','19','2','1','AN','15','0',null,null,'SYSTEM',to_date('04/07/25','DD/MM/RR'),null,null,'2');
Insert into BN_MAIE.BNMAIE08_CAMPO_TRAMA (B08_ID_CAMPO_TRAMA,B02_ID_OPERACION,B01_ID_ENTIDAD,B08_TAG_NAME,B08_ORDEN,B08_TIPO_ORIGEN,B08_TIPO_CAMPO,B08_TIPO_DATO,B08_LONGITUD,B08_IND_RELLENO,B08_VALOR_RELLENO,B08_VALOR_DEFECTO,B08_USU_CRE,B08_FEC_CRE,B08_USU_MOD,B08_FEC_MOD,B08_ALINEACION) values ('50','42','1001','CODIGO-RESPUESTA','20','2','1','AN','5','0',null,null,'SYSTEM',to_date('04/07/25','DD/MM/RR'),null,null,'2');
Insert into BN_MAIE.BNMAIE08_CAMPO_TRAMA (B08_ID_CAMPO_TRAMA,B02_ID_OPERACION,B01_ID_ENTIDAD,B08_TAG_NAME,B08_ORDEN,B08_TIPO_ORIGEN,B08_TIPO_CAMPO,B08_TIPO_DATO,B08_LONGITUD,B08_IND_RELLENO,B08_VALOR_RELLENO,B08_VALOR_DEFECTO,B08_USU_CRE,B08_FEC_CRE,B08_USU_MOD,B08_FEC_MOD,B08_ALINEACION) values ('51','42','1001','MENSAJE-RESPUESTA','21','2','1','AN','100','0',null,null,'SYSTEM',to_date('04/07/25','DD/MM/RR'),null,null,'2');
REM INSERTING into BN_MAIE.BNMAIE09_LLAVE_BODY
SET DEFINE OFF;
Insert into BN_MAIE.BNMAIE09_LLAVE_BODY (B09_ID_LLAVE_BODY,B02_ID_OPERACION,B01_ID_ENTIDAD,B09_TAG_NAME,B09_TIPO_ORIGEN,B09_ID_LLAVE_PADRE,B09_TIPO_DATO_ESPERADO,B09_ES_PADRE,B09_VALOR_DEFECTO,B09_ORDEN,B09_IND_OBLIGATORIO,B09_DESCRIPCION,B09_IND_MAPEABLE,B09_USU_CRE,B09_FEC_CRE,B09_USU_MOD,B09_FEC_MOD) values ('1','42','1001','id','1',null,'1','0','12345','1','0',null,'0','SYSTEM',to_date('04/07/25','DD/MM/RR'),null,null);
Insert into BN_MAIE.BNMAIE09_LLAVE_BODY (B09_ID_LLAVE_BODY,B02_ID_OPERACION,B01_ID_ENTIDAD,B09_TAG_NAME,B09_TIPO_ORIGEN,B09_ID_LLAVE_PADRE,B09_TIPO_DATO_ESPERADO,B09_ES_PADRE,B09_VALOR_DEFECTO,B09_ORDEN,B09_IND_OBLIGATORIO,B09_DESCRIPCION,B09_IND_MAPEABLE,B09_USU_CRE,B09_FEC_CRE,B09_USU_MOD,B09_FEC_MOD) values ('2','42','1001','amount','1',null,'3','0','100.75','2','0',null,'0','SYSTEM',to_date('04/07/25','DD/MM/RR'),null,null);
Insert into BN_MAIE.BNMAIE09_LLAVE_BODY (B09_ID_LLAVE_BODY,B02_ID_OPERACION,B01_ID_ENTIDAD,B09_TAG_NAME,B09_TIPO_ORIGEN,B09_ID_LLAVE_PADRE,B09_TIPO_DATO_ESPERADO,B09_ES_PADRE,B09_VALOR_DEFECTO,B09_ORDEN,B09_IND_OBLIGATORIO,B09_DESCRIPCION,B09_IND_MAPEABLE,B09_USU_CRE,B09_FEC_CRE,B09_USU_MOD,B09_FEC_MOD) values ('3','42','1001','currency','1',null,'1','0','USD','3','0',null,'0','SYSTEM',to_date('04/07/25','DD/MM/RR'),null,null);
Insert into BN_MAIE.BNMAIE09_LLAVE_BODY (B09_ID_LLAVE_BODY,B02_ID_OPERACION,B01_ID_ENTIDAD,B09_TAG_NAME,B09_TIPO_ORIGEN,B09_ID_LLAVE_PADRE,B09_TIPO_DATO_ESPERADO,B09_ES_PADRE,B09_VALOR_DEFECTO,B09_ORDEN,B09_IND_OBLIGATORIO,B09_DESCRIPCION,B09_IND_MAPEABLE,B09_USU_CRE,B09_FEC_CRE,B09_USU_MOD,B09_FEC_MOD) values ('4','42','1001','product','1',null,'1','0','Widget','4','0',null,'0','SYSTEM',to_date('04/07/25','DD/MM/RR'),null,null);
Insert into BN_MAIE.BNMAIE09_LLAVE_BODY (B09_ID_LLAVE_BODY,B02_ID_OPERACION,B01_ID_ENTIDAD,B09_TAG_NAME,B09_TIPO_ORIGEN,B09_ID_LLAVE_PADRE,B09_TIPO_DATO_ESPERADO,B09_ES_PADRE,B09_VALOR_DEFECTO,B09_ORDEN,B09_IND_OBLIGATORIO,B09_DESCRIPCION,B09_IND_MAPEABLE,B09_USU_CRE,B09_FEC_CRE,B09_USU_MOD,B09_FEC_MOD) values ('5','42','1001','price','1',null,'3','0','25.5','5','0',null,'0','SYSTEM',to_date('04/07/25','DD/MM/RR'),null,null);
Insert into BN_MAIE.BNMAIE09_LLAVE_BODY (B09_ID_LLAVE_BODY,B02_ID_OPERACION,B01_ID_ENTIDAD,B09_TAG_NAME,B09_TIPO_ORIGEN,B09_ID_LLAVE_PADRE,B09_TIPO_DATO_ESPERADO,B09_ES_PADRE,B09_VALOR_DEFECTO,B09_ORDEN,B09_IND_OBLIGATORIO,B09_DESCRIPCION,B09_IND_MAPEABLE,B09_USU_CRE,B09_FEC_CRE,B09_USU_MOD,B09_FEC_MOD) values ('6','42','1001','quantity','1',null,'2','0','4','6','0',null,'0','SYSTEM',to_date('04/07/25','DD/MM/RR'),null,null);
REM INSERTING into BN_MAIE.BNMAIE10_MAPEO
SET DEFINE OFF;
--------------------------------------------------------
--  DDL for Index UK_B02_COD_OPERACION_ENTIDAD
--------------------------------------------------------

  CREATE UNIQUE INDEX "BN_MAIE"."UK_B02_COD_OPERACION_ENTIDAD" ON "BN_MAIE"."BNMAIE02_OPERACION" ("B02_COD_OPERACION", "B01_ID_ENTIDAD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "BN_MAIE_DATA" ;
--------------------------------------------------------
--  DDL for Index UK_B04_COD_GRUP_PARA_OPER_ENTIDAD
--------------------------------------------------------

  CREATE UNIQUE INDEX "BN_MAIE"."UK_B04_COD_GRUP_PARA_OPER_ENTIDAD" ON "BN_MAIE"."BNMAIE04_PARAMETRO" ("B04_COD_GRUP", "B04_COD_PARA", "B04_COD_OPER", "B01_ID_ENTIDAD_FK") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "BN_MAIE_DATA" ;
--------------------------------------------------------
--  DDL for Index UK_B08_OPERACION_ENTIDAD_TAG_ORIGEN
--------------------------------------------------------

  CREATE UNIQUE INDEX "BN_MAIE"."UK_B08_OPERACION_ENTIDAD_TAG_ORIGEN" ON "BN_MAIE"."BNMAIE08_CAMPO_TRAMA" ("B02_ID_OPERACION", "B01_ID_ENTIDAD", "B08_TAG_NAME", "B08_TIPO_ORIGEN") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "BN_MAIE_DATA" ;
--------------------------------------------------------
--  DDL for Index UK_B09_OPERACION_ENTIDAD_TAG_ORIGEN_PADRE
--------------------------------------------------------

  CREATE UNIQUE INDEX "BN_MAIE"."UK_B09_OPERACION_ENTIDAD_TAG_ORIGEN_PADRE" ON "BN_MAIE"."BNMAIE09_LLAVE_BODY" ("B02_ID_OPERACION", "B01_ID_ENTIDAD", "B09_TAG_NAME", "B09_TIPO_ORIGEN", "B09_ID_LLAVE_PADRE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "BN_MAIE_DATA" ;
--------------------------------------------------------
--  DDL for Index UK_B10_OPERACION_ENTIDAD_MAPPING
--------------------------------------------------------

  CREATE UNIQUE INDEX "BN_MAIE"."UK_B10_OPERACION_ENTIDAD_MAPPING" ON "BN_MAIE"."BNMAIE10_MAPEO" ("B02_ID_OPERACION", "B01_ID_ENTIDAD", "B08_ID_CAMPO_TRAMA", "B09_ID_LLAVE_BODY") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "BN_MAIE_DATA" ;
--------------------------------------------------------
--  DDL for Index PK_BNMAIE01_ENTIDAD
--------------------------------------------------------

  CREATE UNIQUE INDEX "BN_MAIE"."PK_BNMAIE01_ENTIDAD" ON "BN_MAIE"."BNMAIE01_ENTIDAD" ("B01_ID_ENTIDAD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "BN_MAIE_DATA" ;
--------------------------------------------------------
--  DDL for Index PK_BNMAIE02_OPERACION
--------------------------------------------------------

  CREATE UNIQUE INDEX "BN_MAIE"."PK_BNMAIE02_OPERACION" ON "BN_MAIE"."BNMAIE02_OPERACION" ("B02_ID_OPERACION", "B01_ID_ENTIDAD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "BN_MAIE_DATA" ;
--------------------------------------------------------
--  DDL for Index PK_BNMAIE07_CONEXION
--------------------------------------------------------

  CREATE UNIQUE INDEX "BN_MAIE"."PK_BNMAIE07_CONEXION" ON "BN_MAIE"."BNMAIE07_CONEXION" ("B07_ID_CONEXION") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "BN_MAIE_DATA" ;
--------------------------------------------------------
--  DDL for Index PK_BNMAIE08_CAMPO_TRAMA
--------------------------------------------------------

  CREATE UNIQUE INDEX "BN_MAIE"."PK_BNMAIE08_CAMPO_TRAMA" ON "BN_MAIE"."BNMAIE08_CAMPO_TRAMA" ("B08_ID_CAMPO_TRAMA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "BN_MAIE_DATA" ;
--------------------------------------------------------
--  DDL for Index PK_BNMAIE09_LLAVE_BODY
--------------------------------------------------------

  CREATE UNIQUE INDEX "BN_MAIE"."PK_BNMAIE09_LLAVE_BODY" ON "BN_MAIE"."BNMAIE09_LLAVE_BODY" ("B09_ID_LLAVE_BODY") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "BN_MAIE_DATA" ;
--------------------------------------------------------
--  DDL for Index PK_BNMAIE10_MAPEO
--------------------------------------------------------

  CREATE UNIQUE INDEX "BN_MAIE"."PK_BNMAIE10_MAPEO" ON "BN_MAIE"."BNMAIE10_MAPEO" ("B10_ID_MAPEO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "BN_MAIE_DATA" ;
--------------------------------------------------------
--  Constraints for Table BNMAIE02_OPERACION
--------------------------------------------------------

  ALTER TABLE "BN_MAIE"."BNMAIE02_OPERACION" ADD CONSTRAINT "UK_B02_COD_OPERACION_ENTIDAD" UNIQUE ("B02_COD_OPERACION", "B01_ID_ENTIDAD")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "BN_MAIE_DATA"  ENABLE;
  ALTER TABLE "BN_MAIE"."BNMAIE02_OPERACION" MODIFY ("B02_ID_OPERACION" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE02_OPERACION" MODIFY ("B01_ID_ENTIDAD" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE02_OPERACION" MODIFY ("B07_ID_CONEXION" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE02_OPERACION" MODIFY ("B02_DESCRIPCION" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE02_OPERACION" MODIFY ("B02_REQUIERE_BODY_ENVIO" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE02_OPERACION" MODIFY ("B02_USU_CRE" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE02_OPERACION" MODIFY ("B02_FEC_CRE" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE02_OPERACION" ADD CONSTRAINT "CHK_B02_REQUIERE_BODY_ENVIO" CHECK (B02_REQUIERE_BODY_ENVIO IN (0, 1)) ENABLE;
  ALTER TABLE "BN_MAIE"."BNMAIE02_OPERACION" ADD CONSTRAINT "PK_BNMAIE02_OPERACION" PRIMARY KEY ("B02_ID_OPERACION", "B01_ID_ENTIDAD")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "BN_MAIE_DATA"  ENABLE;
--------------------------------------------------------
--  Constraints for Table BNMAIE10_MAPEO
--------------------------------------------------------

  ALTER TABLE "BN_MAIE"."BNMAIE10_MAPEO" MODIFY ("B10_IND_TRANSFORMACION" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE10_MAPEO" MODIFY ("B10_IND_TRIM" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE10_MAPEO" MODIFY ("B10_IND_AUTOCOMPLETAR" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE10_MAPEO" MODIFY ("B10_USU_CRE" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE10_MAPEO" MODIFY ("B10_FEC_CRE" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE10_MAPEO" ADD CONSTRAINT "CHK_B10_IND_TRANSFORMACION" CHECK (B10_IND_TRANSFORMACION IN (0, 1)) ENABLE;
  ALTER TABLE "BN_MAIE"."BNMAIE10_MAPEO" ADD CONSTRAINT "CHK_B10_IND_TRIM" CHECK (B10_IND_TRIM IN (0, 1)) ENABLE;
  ALTER TABLE "BN_MAIE"."BNMAIE10_MAPEO" ADD CONSTRAINT "CHK_B10_IND_AUTOCOMPLETAR" CHECK (B10_IND_AUTOCOMPLETAR IN (0, 1)) ENABLE;
  ALTER TABLE "BN_MAIE"."BNMAIE10_MAPEO" ADD CONSTRAINT "PK_BNMAIE10_MAPEO" PRIMARY KEY ("B10_ID_MAPEO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "BN_MAIE_DATA"  ENABLE;
  ALTER TABLE "BN_MAIE"."BNMAIE10_MAPEO" ADD CONSTRAINT "UK_B10_OPERACION_ENTIDAD_MAPPING" UNIQUE ("B02_ID_OPERACION", "B01_ID_ENTIDAD", "B08_ID_CAMPO_TRAMA", "B09_ID_LLAVE_BODY")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "BN_MAIE_DATA"  ENABLE;
  ALTER TABLE "BN_MAIE"."BNMAIE10_MAPEO" MODIFY ("B10_ID_MAPEO" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE10_MAPEO" MODIFY ("B02_ID_OPERACION" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE10_MAPEO" MODIFY ("B01_ID_ENTIDAD" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE10_MAPEO" MODIFY ("B08_ID_CAMPO_TRAMA" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE10_MAPEO" MODIFY ("B09_ID_LLAVE_BODY" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table BNMAIE04_PARAMETRO
--------------------------------------------------------

  ALTER TABLE "BN_MAIE"."BNMAIE04_PARAMETRO" ADD PRIMARY KEY ("B04_ID_PARA")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "BN_MAIE_DATA"  ENABLE;
  ALTER TABLE "BN_MAIE"."BNMAIE04_PARAMETRO" ADD CONSTRAINT "UK_B04_COD_GRUP_PARA_OPER_ENTIDAD" UNIQUE ("B04_COD_GRUP", "B04_COD_PARA", "B04_COD_OPER", "B01_ID_ENTIDAD_FK")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "BN_MAIE_DATA"  ENABLE;
  ALTER TABLE "BN_MAIE"."BNMAIE04_PARAMETRO" ADD CHECK (b04_ind_act in (0, 1)) ENABLE;
  ALTER TABLE "BN_MAIE"."BNMAIE04_PARAMETRO" MODIFY ("B04_ID_PARA" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE04_PARAMETRO" MODIFY ("B04_COD_GRUP" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE04_PARAMETRO" MODIFY ("B04_COD_PARA" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE04_PARAMETRO" MODIFY ("B04_IND_ACT" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE04_PARAMETRO" MODIFY ("B04_DESCRIP" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE04_PARAMETRO" MODIFY ("B04_FEC_CRE" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE04_PARAMETRO" MODIFY ("B04_USU_CRE" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE04_PARAMETRO" MODIFY ("B04_VAL_01" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE04_PARAMETRO" MODIFY ("B04_COD_OPER" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE04_PARAMETRO" MODIFY ("B01_ID_ENTIDAD_FK" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table BNMAIE08_CAMPO_TRAMA
--------------------------------------------------------

  ALTER TABLE "BN_MAIE"."BNMAIE08_CAMPO_TRAMA" MODIFY ("B08_ALINEACION" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE08_CAMPO_TRAMA" MODIFY ("B08_ID_CAMPO_TRAMA" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE08_CAMPO_TRAMA" MODIFY ("B02_ID_OPERACION" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE08_CAMPO_TRAMA" MODIFY ("B01_ID_ENTIDAD" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE08_CAMPO_TRAMA" MODIFY ("B08_TAG_NAME" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE08_CAMPO_TRAMA" MODIFY ("B08_ORDEN" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE08_CAMPO_TRAMA" MODIFY ("B08_TIPO_ORIGEN" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE08_CAMPO_TRAMA" MODIFY ("B08_TIPO_CAMPO" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE08_CAMPO_TRAMA" MODIFY ("B08_TIPO_DATO" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE08_CAMPO_TRAMA" MODIFY ("B08_LONGITUD" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE08_CAMPO_TRAMA" MODIFY ("B08_IND_RELLENO" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE08_CAMPO_TRAMA" MODIFY ("B08_USU_CRE" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE08_CAMPO_TRAMA" MODIFY ("B08_FEC_CRE" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE08_CAMPO_TRAMA" ADD CONSTRAINT "CHK_B08_TIPO_ORIGEN" CHECK (B08_TIPO_ORIGEN IN (1, 2)) ENABLE;
  ALTER TABLE "BN_MAIE"."BNMAIE08_CAMPO_TRAMA" ADD CONSTRAINT "CHK_B08_TIPO_CAMPO" CHECK (B08_TIPO_CAMPO IN (1, 2, 3)) ENABLE;
  ALTER TABLE "BN_MAIE"."BNMAIE08_CAMPO_TRAMA" ADD CONSTRAINT "CHK_B08_TIPO_DATO" CHECK (B08_TIPO_DATO IN ('N', 'A', 'AN', 'D')) ENABLE;
  ALTER TABLE "BN_MAIE"."BNMAIE08_CAMPO_TRAMA" ADD CONSTRAINT "CHK_B08_IND_RELLENO" CHECK (B08_IND_RELLENO IN (0, 1)) ENABLE;
  ALTER TABLE "BN_MAIE"."BNMAIE08_CAMPO_TRAMA" ADD CONSTRAINT "PK_BNMAIE08_CAMPO_TRAMA" PRIMARY KEY ("B08_ID_CAMPO_TRAMA")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "BN_MAIE_DATA"  ENABLE;
  ALTER TABLE "BN_MAIE"."BNMAIE08_CAMPO_TRAMA" ADD CONSTRAINT "UK_B08_OPERACION_ENTIDAD_TAG_ORIGEN" UNIQUE ("B02_ID_OPERACION", "B01_ID_ENTIDAD", "B08_TAG_NAME", "B08_TIPO_ORIGEN")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "BN_MAIE_DATA"  ENABLE;
--------------------------------------------------------
--  Constraints for Table BNMAIE01_ENTIDAD
--------------------------------------------------------

  ALTER TABLE "BN_MAIE"."BNMAIE01_ENTIDAD" MODIFY ("B01_ID_ENTIDAD" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE01_ENTIDAD" MODIFY ("B01_DESCRIPCION" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE01_ENTIDAD" MODIFY ("B01_TIPO_COMUNICACION" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE01_ENTIDAD" MODIFY ("B01_TIPO_TRAMA_BN" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE01_ENTIDAD" MODIFY ("B01_TIPO_TRAMA_EX" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE01_ENTIDAD" MODIFY ("B01_IND_MAPEO" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE01_ENTIDAD" MODIFY ("B01_ESTADO" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE01_ENTIDAD" MODIFY ("B01_USU_CRE" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE01_ENTIDAD" MODIFY ("B01_FEC_CRE" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE01_ENTIDAD" ADD CONSTRAINT "CHK_B01_TIPO_COMUNICACION" CHECK (B01_TIPO_COMUNICACION IN (1, 2, 3)) ENABLE;
  ALTER TABLE "BN_MAIE"."BNMAIE01_ENTIDAD" ADD CONSTRAINT "CHK_B01_TIPO_TRAMA_BN" CHECK (B01_TIPO_TRAMA_BN IN (1, 2)) ENABLE;
  ALTER TABLE "BN_MAIE"."BNMAIE01_ENTIDAD" ADD CONSTRAINT "CHK_B01_TIPO_TRAMA_EX" CHECK (B01_TIPO_TRAMA_EX IN (1, 2)) ENABLE;
  ALTER TABLE "BN_MAIE"."BNMAIE01_ENTIDAD" ADD CONSTRAINT "CHK_B01_IND_MAPEO" CHECK (B01_IND_MAPEO IN (0, 1)) ENABLE;
  ALTER TABLE "BN_MAIE"."BNMAIE01_ENTIDAD" ADD CONSTRAINT "CHK_B01_ESTADO" CHECK (B01_ESTADO IN (0, 1)) ENABLE;
  ALTER TABLE "BN_MAIE"."BNMAIE01_ENTIDAD" ADD CONSTRAINT "PK_BNMAIE01_ENTIDAD" PRIMARY KEY ("B01_ID_ENTIDAD")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "BN_MAIE_DATA"  ENABLE;
--------------------------------------------------------
--  Constraints for Table BNMAIE09_LLAVE_BODY
--------------------------------------------------------

  ALTER TABLE "BN_MAIE"."BNMAIE09_LLAVE_BODY" MODIFY ("B09_ID_LLAVE_BODY" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE09_LLAVE_BODY" MODIFY ("B02_ID_OPERACION" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE09_LLAVE_BODY" MODIFY ("B01_ID_ENTIDAD" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE09_LLAVE_BODY" MODIFY ("B09_TAG_NAME" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE09_LLAVE_BODY" MODIFY ("B09_TIPO_ORIGEN" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE09_LLAVE_BODY" MODIFY ("B09_TIPO_DATO_ESPERADO" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE09_LLAVE_BODY" MODIFY ("B09_ES_PADRE" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE09_LLAVE_BODY" MODIFY ("B09_ORDEN" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE09_LLAVE_BODY" MODIFY ("B09_IND_OBLIGATORIO" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE09_LLAVE_BODY" MODIFY ("B09_IND_MAPEABLE" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE09_LLAVE_BODY" MODIFY ("B09_USU_CRE" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE09_LLAVE_BODY" MODIFY ("B09_FEC_CRE" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE09_LLAVE_BODY" ADD CONSTRAINT "CHK_B09_TIPO_ORIGEN" CHECK (B09_TIPO_ORIGEN IN (1, 2)) ENABLE;
  ALTER TABLE "BN_MAIE"."BNMAIE09_LLAVE_BODY" ADD CONSTRAINT "CHK_B09_TIPO_DATO_ESPERADO" CHECK (B09_TIPO_DATO_ESPERADO IN (1, 2, 3, 4, 5, 6)) ENABLE;
  ALTER TABLE "BN_MAIE"."BNMAIE09_LLAVE_BODY" ADD CONSTRAINT "CHK_B09_ES_PADRE" CHECK (B09_ES_PADRE IN (0, 1)) ENABLE;
  ALTER TABLE "BN_MAIE"."BNMAIE09_LLAVE_BODY" ADD CONSTRAINT "CHK_B09_IND_OBLIGATORIO" CHECK (B09_IND_OBLIGATORIO IN (0, 1)) ENABLE;
  ALTER TABLE "BN_MAIE"."BNMAIE09_LLAVE_BODY" ADD CONSTRAINT "CHK_B09_IND_MAPEABLE" CHECK (B09_IND_MAPEABLE IN (0, 1)) ENABLE;
  ALTER TABLE "BN_MAIE"."BNMAIE09_LLAVE_BODY" ADD CONSTRAINT "PK_BNMAIE09_LLAVE_BODY" PRIMARY KEY ("B09_ID_LLAVE_BODY")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "BN_MAIE_DATA"  ENABLE;
  ALTER TABLE "BN_MAIE"."BNMAIE09_LLAVE_BODY" ADD CONSTRAINT "UK_B09_OPERACION_ENTIDAD_TAG_ORIGEN_PADRE" UNIQUE ("B02_ID_OPERACION", "B01_ID_ENTIDAD", "B09_TAG_NAME", "B09_TIPO_ORIGEN", "B09_ID_LLAVE_PADRE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "BN_MAIE_DATA"  ENABLE;
--------------------------------------------------------
--  Constraints for Table BNMAIE07_CONEXION
--------------------------------------------------------

  ALTER TABLE "BN_MAIE"."BNMAIE07_CONEXION" MODIFY ("B07_ID_CONEXION" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE07_CONEXION" MODIFY ("B01_ID_ENTIDAD" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE07_CONEXION" MODIFY ("B07_PROTOCOLO" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE07_CONEXION" MODIFY ("B07_HOST" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE07_CONEXION" MODIFY ("B07_PUERTO" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE07_CONEXION" MODIFY ("B07_USA_TLS" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE07_CONEXION" MODIFY ("B07_TIMEOUT_CONEXION_MS" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE07_CONEXION" MODIFY ("B07_TIMEOUT_LECTURA_MS" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE07_CONEXION" MODIFY ("B07_MAX_REINTENTOS" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE07_CONEXION" MODIFY ("B07_REINTENTO_ESPERA_MS" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE07_CONEXION" MODIFY ("B07_USU_CRE" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE07_CONEXION" MODIFY ("B07_FEC_CRE" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE07_CONEXION" ADD CONSTRAINT "CHK_B07_PROTOCOLO" CHECK (B07_PROTOCOLO IN (1, 2, 3, 4, 5)) ENABLE;
  ALTER TABLE "BN_MAIE"."BNMAIE07_CONEXION" ADD CONSTRAINT "CHK_B07_USA_TLS" CHECK (B07_USA_TLS IN (0, 1)) ENABLE;
  ALTER TABLE "BN_MAIE"."BNMAIE07_CONEXION" ADD CONSTRAINT "CHK_B07_IND_CREDENCIALES" CHECK (B07_IND_CREDENCIALES IN (0, 1)) ENABLE;
  ALTER TABLE "BN_MAIE"."BNMAIE07_CONEXION" ADD CONSTRAINT "PK_BNMAIE07_CONEXION" PRIMARY KEY ("B07_ID_CONEXION")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "BN_MAIE_DATA"  ENABLE;
--------------------------------------------------------
--  Constraints for Table BNMAIE05_AUDITORIA
--------------------------------------------------------

  ALTER TABLE "BN_MAIE"."BNMAIE05_AUDITORIA" MODIFY ("F05_ID" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE05_AUDITORIA" MODIFY ("F05_COD_APLI" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE05_AUDITORIA" MODIFY ("F05_COD_CAJERO" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE05_AUDITORIA" MODIFY ("F05_COD_CANAL" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE05_AUDITORIA" MODIFY ("F05_COD_ENT" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE05_AUDITORIA" MODIFY ("F05_FEC_LOG" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE05_AUDITORIA" MODIFY ("F05_FEC_PROCESO" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE05_AUDITORIA" MODIFY ("F05_HOR_LOG" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE05_AUDITORIA" MODIFY ("F05_COD_OPER" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE05_AUDITORIA" MODIFY ("F05_COD_RETORNO" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE05_AUDITORIA" MODIFY ("F05_TIP_OPER" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE05_AUDITORIA" MODIFY ("F05_COD_TRAN" NOT NULL ENABLE);
  ALTER TABLE "BN_MAIE"."BNMAIE05_AUDITORIA" ADD PRIMARY KEY ("F05_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "BN_MAIE_DATA"  ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table BNMAIE02_OPERACION
--------------------------------------------------------

  ALTER TABLE "BN_MAIE"."BNMAIE02_OPERACION" ADD CONSTRAINT "FK_OPERACION_ENTIDAD" FOREIGN KEY ("B01_ID_ENTIDAD")
	  REFERENCES "BN_MAIE"."BNMAIE01_ENTIDAD" ("B01_ID_ENTIDAD") ENABLE;
  ALTER TABLE "BN_MAIE"."BNMAIE02_OPERACION" ADD CONSTRAINT "FK_OPERACION_CONEXION" FOREIGN KEY ("B07_ID_CONEXION")
	  REFERENCES "BN_MAIE"."BNMAIE07_CONEXION" ("B07_ID_CONEXION") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table BNMAIE04_PARAMETRO
--------------------------------------------------------

  ALTER TABLE "BN_MAIE"."BNMAIE04_PARAMETRO" ADD CONSTRAINT "FK_B04_OPERACION_ENTIDAD_COMPOSITE" FOREIGN KEY ("B04_COD_OPER", "B01_ID_ENTIDAD_FK")
	  REFERENCES "BN_MAIE"."BNMAIE02_OPERACION" ("B02_ID_OPERACION", "B01_ID_ENTIDAD") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table BNMAIE07_CONEXION
--------------------------------------------------------

  ALTER TABLE "BN_MAIE"."BNMAIE07_CONEXION" ADD CONSTRAINT "FK_CONEXION_ENTIDAD" FOREIGN KEY ("B01_ID_ENTIDAD")
	  REFERENCES "BN_MAIE"."BNMAIE01_ENTIDAD" ("B01_ID_ENTIDAD") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table BNMAIE08_CAMPO_TRAMA
--------------------------------------------------------

  ALTER TABLE "BN_MAIE"."BNMAIE08_CAMPO_TRAMA" ADD CONSTRAINT "FK_CAMPO_TRAMA_OPERACION" FOREIGN KEY ("B02_ID_OPERACION", "B01_ID_ENTIDAD")
	  REFERENCES "BN_MAIE"."BNMAIE02_OPERACION" ("B02_ID_OPERACION", "B01_ID_ENTIDAD") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table BNMAIE09_LLAVE_BODY
--------------------------------------------------------

  ALTER TABLE "BN_MAIE"."BNMAIE09_LLAVE_BODY" ADD CONSTRAINT "FK_LLAVE_BODY_OPERACION" FOREIGN KEY ("B02_ID_OPERACION", "B01_ID_ENTIDAD")
	  REFERENCES "BN_MAIE"."BNMAIE02_OPERACION" ("B02_ID_OPERACION", "B01_ID_ENTIDAD") ENABLE;
  ALTER TABLE "BN_MAIE"."BNMAIE09_LLAVE_BODY" ADD CONSTRAINT "FK_LLAVE_BODY_PADRE" FOREIGN KEY ("B09_ID_LLAVE_PADRE")
	  REFERENCES "BN_MAIE"."BNMAIE09_LLAVE_BODY" ("B09_ID_LLAVE_BODY") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table BNMAIE10_MAPEO
--------------------------------------------------------

  ALTER TABLE "BN_MAIE"."BNMAIE10_MAPEO" ADD CONSTRAINT "FK_MAPEO_OPERACION" FOREIGN KEY ("B02_ID_OPERACION", "B01_ID_ENTIDAD")
	  REFERENCES "BN_MAIE"."BNMAIE02_OPERACION" ("B02_ID_OPERACION", "B01_ID_ENTIDAD") ENABLE;
  ALTER TABLE "BN_MAIE"."BNMAIE10_MAPEO" ADD CONSTRAINT "FK_MAPEO_CAMPO_TRAMA" FOREIGN KEY ("B08_ID_CAMPO_TRAMA")
	  REFERENCES "BN_MAIE"."BNMAIE08_CAMPO_TRAMA" ("B08_ID_CAMPO_TRAMA") ENABLE;
  ALTER TABLE "BN_MAIE"."BNMAIE10_MAPEO" ADD CONSTRAINT "FK_MAPEO_LLAVE_BODY" FOREIGN KEY ("B09_ID_LLAVE_BODY")
	  REFERENCES "BN_MAIE"."BNMAIE09_LLAVE_BODY" ("B09_ID_LLAVE_BODY") ENABLE;
--------------------------------------------------------
--  DDL for Trigger BNTG_MAIE_AUDITORIA
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "BN_MAIE"."BNTG_MAIE_AUDITORIA" 
BEFORE INSERT ON BN_MAIE.BNMAIE05_AUDITORIA
FOR EACH ROW
BEGIN
  IF :NEW.F05_ID IS NULL THEN
    SELECT BNSQ_05_AUDITORIA.NEXTVAL INTO :NEW.F05_ID FROM DUAL;
  END IF;
END;
/
ALTER TRIGGER "BN_MAIE"."BNTG_MAIE_AUDITORIA" ENABLE;
--------------------------------------------------------
--  DDL for Package BNPKG_MAIE_CAMPO_TRAMA08
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE "BN_MAIE"."BNPKG_MAIE_CAMPO_TRAMA08" AS

  -- Constantes de respuesta estándar
  c_cod_ok     CONSTANT VARCHAR2(4) := '0000';
  c_msg_ok     CONSTANT VARCHAR2(100) := 'Proceso exitoso.';
  c_cod_error  CONSTANT VARCHAR2(4) := '0999';

  -- SP_01: Buscar campo de trama por su ID
  PROCEDURE SP_01_BUSCAR_CAMPO_TRAMA (
    p_b08_id_campo_trama IN  BNMAIE08_CAMPO_TRAMA.B08_ID_CAMPO_TRAMA%TYPE,
    o_cursor             OUT SYS_REFCURSOR,
    code_rpta            OUT VARCHAR2,
    desc_rpta            OUT VARCHAR2
  );

  -- SP_02: Listar todos los campos de trama
  PROCEDURE SP_02_SELECCIONAR_CAMPOS_TRAMA (
    o_cursor   OUT SYS_REFCURSOR,
    code_rpta  OUT VARCHAR2,
    desc_rpta  OUT VARCHAR2
  );

  -- SP_03: Actualizar campo de trama
  PROCEDURE SP_03_ACTUALIZAR_CAMPO_TRAMA (
    p_b08_id_campo_trama      IN BNMAIE08_CAMPO_TRAMA.B08_ID_CAMPO_TRAMA%TYPE,
    p_b02_id_operacion        IN BNMAIE08_CAMPO_TRAMA.B02_ID_OPERACION%TYPE,
    p_b01_id_entidad          IN BNMAIE08_CAMPO_TRAMA.B01_ID_ENTIDAD%TYPE,
    p_b08_tag_name            IN BNMAIE08_CAMPO_TRAMA.B08_TAG_NAME%TYPE,
    p_b08_orden               IN BNMAIE08_CAMPO_TRAMA.B08_ORDEN%TYPE,
    p_b08_tipo_origen         IN BNMAIE08_CAMPO_TRAMA.B08_TIPO_ORIGEN%TYPE,
    p_b08_tipo_campo          IN BNMAIE08_CAMPO_TRAMA.B08_TIPO_CAMPO%TYPE,
    p_b08_tipo_dato           IN BNMAIE08_CAMPO_TRAMA.B08_TIPO_DATO%TYPE,
    p_b08_longitud            IN BNMAIE08_CAMPO_TRAMA.B08_LONGITUD%TYPE,
    p_b08_ind_relleno         IN BNMAIE08_CAMPO_TRAMA.B08_IND_RELLENO%TYPE,
    p_b08_valor_relleno       IN BNMAIE08_CAMPO_TRAMA.B08_VALOR_RELLENO%TYPE,
    p_b08_valor_defecto       IN BNMAIE08_CAMPO_TRAMA.B08_VALOR_DEFECTO%TYPE,
    p_b08_alineacion          IN BNMAIE08_CAMPO_TRAMA.B08_ALINEACION%TYPE,
    p_b08_usu_mod             IN BNMAIE08_CAMPO_TRAMA.B08_USU_MOD%TYPE,
    code_rpta                 OUT VARCHAR2,
    desc_rpta                 OUT VARCHAR2
  );

  -- SP_04: Insertar un nuevo campo de trama
  PROCEDURE SP_04_INSERTAR_CAMPO_TRAMA (
    p_b02_id_operacion        IN  BNMAIE08_CAMPO_TRAMA.B02_ID_OPERACION%TYPE,
    p_b01_id_entidad          IN  BNMAIE08_CAMPO_TRAMA.B01_ID_ENTIDAD%TYPE,
    p_b08_tag_name            IN  BNMAIE08_CAMPO_TRAMA.B08_TAG_NAME%TYPE,
    p_b08_orden               IN  BNMAIE08_CAMPO_TRAMA.B08_ORDEN%TYPE,
    p_b08_tipo_origen         IN  BNMAIE08_CAMPO_TRAMA.B08_TIPO_ORIGEN%TYPE,
    p_b08_tipo_campo          IN  BNMAIE08_CAMPO_TRAMA.B08_TIPO_CAMPO%TYPE,
    p_b08_tipo_dato           IN  BNMAIE08_CAMPO_TRAMA.B08_TIPO_DATO%TYPE,
    p_b08_longitud            IN  BNMAIE08_CAMPO_TRAMA.B08_LONGITUD%TYPE,
    p_b08_ind_relleno         IN  BNMAIE08_CAMPO_TRAMA.B08_IND_RELLENO%TYPE,
    p_b08_valor_relleno       IN  BNMAIE08_CAMPO_TRAMA.B08_VALOR_RELLENO%TYPE,
    p_b08_valor_defecto       IN  BNMAIE08_CAMPO_TRAMA.B08_VALOR_DEFECTO%TYPE,
    p_b08_alineacion          IN  BNMAIE08_CAMPO_TRAMA.B08_ALINEACION%TYPE,
    p_b08_usu_cre             IN  BNMAIE08_CAMPO_TRAMA.B08_USU_CRE%TYPE,
    o_b08_id_campo_trama      OUT BNMAIE08_CAMPO_TRAMA.B08_ID_CAMPO_TRAMA%TYPE,
    code_rpta                 OUT VARCHAR2,
    desc_rpta                 OUT VARCHAR2
  );

  -- SP_05: Buscar campos de trama por Operación y Entidad (para listar campos de una operación específica)
  PROCEDURE SP_05_BUSCAR_CAMPOS_POR_OPERACION (
    p_b02_id_operacion IN  BNMAIE08_CAMPO_TRAMA.B02_ID_OPERACION%TYPE,
    p_b01_id_entidad   IN  BNMAIE08_CAMPO_TRAMA.B01_ID_ENTIDAD%TYPE,
    p_b08_tipo_origen  IN  BNMAIE08_CAMPO_TRAMA.B08_TIPO_ORIGEN%TYPE, -- Opcional: filtrar por request/response
    o_cursor           OUT SYS_REFCURSOR,
    code_rpta          OUT VARCHAR2,
    desc_rpta          OUT VARCHAR2
  );

END BNPKG_MAIE_CAMPO_TRAMA08;

/

  GRANT EXECUTE ON "BN_MAIE"."BNPKG_MAIE_CAMPO_TRAMA08" TO "BNRL_MAIE";
--------------------------------------------------------
--  DDL for Package BNPKG_MAIE_CONEXION07
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE "BN_MAIE"."BNPKG_MAIE_CONEXION07" AS

  -- Constantes de respuesta estándar
  c_cod_ok     CONSTANT VARCHAR2(4) := '0000';
  c_msg_ok     CONSTANT VARCHAR2(100) := 'Proceso exitoso.';
  c_cod_error  CONSTANT VARCHAR2(4) := '0999';

  -- SP_01: Buscar conexión por ID
  -- Adapta los nombres de los parámetros y tipos de datos a la tabla BNMAIE07_CONEXION.
  PROCEDURE SP_01_BUSCAR_CONEXION (
    p_b07_id_con   IN  BNMAIE07_CONEXION.B07_ID_CONEXION%TYPE, -- Se corrigió el nombre de la columna
    o_cursor  OUT SYS_REFCURSOR,
    code_rpta      OUT VARCHAR2,
    desc_rpta      OUT VARCHAR2
  );

  -- SP_02: Seleccionar todas las conexiones
  -- Se eliminó la referencia a B07_IND_ACT ya que no existe en la tabla.
  PROCEDURE SP_02_SELECCIONAR_CONEXIONES (
    o_cursor   OUT SYS_REFCURSOR,
    code_rpta  OUT VARCHAR2,
    desc_rpta  OUT VARCHAR2
  );

  -- SP_03: Actualizar conexión
  -- Se adaptaron los nombres de los parámetros y tipos de datos a la tabla BNMAIE07_CONEXION.
  -- Se añadieron los campos B01_ID_ENTIDAD y B07_IND_CREDENCIALES.
  -- Se eliminaron campos que no existen en la tabla.
  PROCEDURE SP_03_ACTUALIZAR_CONEXION (
    p_b07_id_con            IN BNMAIE07_CONEXION.B07_ID_CONEXION%TYPE, -- Se corrigió el nombre
    p_b01_id_entidad        IN BNMAIE07_CONEXION.B01_ID_ENTIDAD%TYPE, -- Se añadió
    p_b07_protocolo         IN BNMAIE07_CONEXION.B07_PROTOCOLO%TYPE, -- Se corrigió el nombre y tipo
    p_b07_host              IN BNMAIE07_CONEXION.B07_HOST%TYPE,
    p_b07_puerto            IN BNMAIE07_CONEXION.B07_PUERTO%TYPE,
    p_b07_usa_tls           IN BNMAIE07_CONEXION.B07_USA_TLS%TYPE, -- Se corrigió el nombre
    p_b07_ind_credenciales  IN BNMAIE07_CONEXION.B07_IND_CREDENCIALES%TYPE, -- Se añadió
    p_b07_timeout_conexion_ms IN BNMAIE07_CONEXION.B07_TIMEOUT_CONEXION_MS%TYPE, -- Se corrigió el nombre
    p_b07_timeout_lectura_ms IN BNMAIE07_CONEXION.B07_TIMEOUT_LECTURA_MS%TYPE, -- Se corrigió el nombre
    p_b07_max_reintentos    IN BNMAIE07_CONEXION.B07_MAX_REINTENTOS%TYPE, -- Se corrigió el nombre
    p_b07_reintento_espera_ms IN BNMAIE07_CONEXION.B07_REINTENTO_ESPERA_MS%TYPE, -- Se corrigió el nombre
    p_b07_usu_mod           IN BNMAIE07_CONEXION.B07_USU_MOD%TYPE, -- Se corrigió el nombre
    code_rpta               OUT VARCHAR2,
    desc_rpta               OUT VARCHAR2
  );

  -- SP_04: Insertar una nueva conexión
  -- Se adaptaron los nombres de los parámetros y tipos de datos a la tabla BNMAIE07_CONEXION.
  -- Se añadieron los campos B01_ID_ENTIDAD y B07_IND_CREDENCIALES.
  -- Se eliminaron campos que no existen en la tabla.
  PROCEDURE SP_04_INSERTAR_CONEXION (
      p_b01_id_entidad        IN BNMAIE07_CONEXION.B01_ID_ENTIDAD%TYPE, -- Se añadió
      p_b07_protocolo         IN BNMAIE07_CONEXION.B07_PROTOCOLO%TYPE, -- Se corrigió el nombre y tipo
      p_b07_host              IN BNMAIE07_CONEXION.B07_HOST%TYPE,
      p_b07_puerto            IN BNMAIE07_CONEXION.B07_PUERTO%TYPE,
      p_b07_usa_tls           IN BNMAIE07_CONEXION.B07_USA_TLS%TYPE, -- Se corrigió el nombre
      p_b07_ind_credenciales  IN BNMAIE07_CONEXION.B07_IND_CREDENCIALES%TYPE, -- Se añadió
      p_b07_timeout_conexion_ms IN BNMAIE07_CONEXION.B07_TIMEOUT_CONEXION_MS%TYPE, -- Se corrigió el nombre
      p_b07_timeout_lectura_ms IN BNMAIE07_CONEXION.B07_TIMEOUT_LECTURA_MS%TYPE, -- Se corrigió el nombre
      p_b07_max_reintentos    IN BNMAIE07_CONEXION.B07_MAX_REINTENTOS%TYPE, -- Se corrigió el nombre
      p_b07_reintento_espera_ms IN BNMAIE07_CONEXION.B07_REINTENTO_ESPERA_MS%TYPE, -- Se corrigió el nombre
      p_b07_usu_cre           IN BNMAIE07_CONEXION.B07_USU_CRE%TYPE, -- Se corrigió el nombre
      code_rpta               OUT VARCHAR2,
      desc_rpta               OUT VARCHAR2
  );

  -- SP_05: Buscar conexión por ID (Idéntico a SP_01_BUSCAR_CONEXION)
  PROCEDURE SP_05_BUSCAR_CONEXION_ID (
    p_b07_id_con   IN BNMAIE07_CONEXION.B07_ID_CONEXION%TYPE, -- Se corrigió el nombre
    o_cursor  OUT SYS_REFCURSOR,
    code_rpta      OUT VARCHAR2,
    desc_rpta      OUT VARCHAR2
  );

END BNPKG_MAIE_CONEXION07;

/

  GRANT EXECUTE ON "BN_MAIE"."BNPKG_MAIE_CONEXION07" TO "BNRL_MAIE";
--------------------------------------------------------
--  DDL for Package BNPKG_MAIE_ENTIDAD01
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE "BN_MAIE"."BNPKG_MAIE_ENTIDAD01" AS

  -- Constantes de respuesta estándar para los procedimientos
  c_cod_ok     CONSTANT VARCHAR2(4) := '0000';
  c_msg_ok     CONSTANT VARCHAR2(100) := 'Proceso exitoso.';
  c_cod_error  CONSTANT VARCHAR2(4) := '0999';
  c_msg_error  CONSTANT VARCHAR2(100) := 'Ocurrió un error inesperado.';

  -- SP_01: Buscar una entidad por su ID (Clave Primaria)
  PROCEDURE SP_01_BUSCAR_POR_ID (
    p_b01_id_entidad  IN  BNMAIE01_ENTIDAD.B01_ID_ENTIDAD%TYPE,
    o_cursor          OUT SYS_REFCURSOR,
    o_code_rpta       OUT VARCHAR2,
    o_desc_rpta       OUT VARCHAR2
  );

  -- SP_02: Seleccionar todas las entidades registradas
  PROCEDURE SP_02_SELECCIONAR_TODAS (
    o_cursor    OUT SYS_REFCURSOR,
    o_code_rpta OUT VARCHAR2,
    o_desc_rpta OUT VARCHAR2
  );

  -- SP_03: Actualizar una entidad existente.
  -- Solo se actualizan los campos que son susceptibles a cambios funcionales.
  PROCEDURE SP_03_ACTUALIZAR (
    p_b01_id_entidad        IN BNMAIE01_ENTIDAD.B01_ID_ENTIDAD%TYPE,
    p_b01_descripcion       IN BNMAIE01_ENTIDAD.B01_DESCRIPCION%TYPE,
    p_b01_tipo_comunicacion IN BNMAIE01_ENTIDAD.B01_TIPO_COMUNICACION%TYPE,
    p_b01_tipo_trama_bn     IN BNMAIE01_ENTIDAD.B01_TIPO_TRAMA_BN%TYPE,
    p_b01_tipo_trama_ex     IN BNMAIE01_ENTIDAD.B01_TIPO_TRAMA_EX%TYPE,
    p_b01_ind_mapeo         IN BNMAIE01_ENTIDAD.B01_IND_MAPEO%TYPE,
    p_b01_estado            IN BNMAIE01_ENTIDAD.B01_ESTADO%TYPE,
    p_b01_usu_mod           IN BNMAIE01_ENTIDAD.B01_USU_MOD%TYPE,
    o_code_rpta             OUT VARCHAR2,
    o_desc_rpta             OUT VARCHAR2
  );

  -- SP_04: Insertar una nueva entidad con todos sus parámetros iniciales.
  PROCEDURE SP_04_INSERTAR (
    p_b01_id_entidad        IN BNMAIE01_ENTIDAD.B01_ID_ENTIDAD%TYPE,
    p_b01_descripcion       IN BNMAIE01_ENTIDAD.B01_DESCRIPCION%TYPE,
    p_b01_tipo_comunicacion IN BNMAIE01_ENTIDAD.B01_TIPO_COMUNICACION%TYPE,
    p_b01_tipo_trama_bn     IN BNMAIE01_ENTIDAD.B01_TIPO_TRAMA_BN%TYPE,
    p_b01_tipo_trama_ex     IN BNMAIE01_ENTIDAD.B01_TIPO_TRAMA_EX%TYPE,
    p_b01_ind_mapeo         IN BNMAIE01_ENTIDAD.B01_IND_MAPEO%TYPE,
    p_b01_estado            IN BNMAIE01_ENTIDAD.B01_ESTADO%TYPE,
    p_b01_usu_cre           IN BNMAIE01_ENTIDAD.B01_USU_CRE%TYPE,
    o_code_rpta             OUT VARCHAR2,
    o_desc_rpta             OUT VARCHAR2
  );

END BNPKG_MAIE_ENTIDAD01;

/

  GRANT EXECUTE ON "BN_MAIE"."BNPKG_MAIE_ENTIDAD01" TO "BNRL_MAIE";
--------------------------------------------------------
--  DDL for Package BNPKG_MAIE_LLAVE_BODY09
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE "BN_MAIE"."BNPKG_MAIE_LLAVE_BODY09" AS

  -- Constantes de respuesta estándar
  c_cod_ok     CONSTANT VARCHAR2(4) := '0000';
  c_msg_ok     CONSTANT VARCHAR2(100) := 'Proceso exitoso.';
  c_cod_error  CONSTANT VARCHAR2(4) := '0999';

  -- SP_01: Buscar llave de cuerpo por su ID
  PROCEDURE SP_01_BUSCAR_LLAVE_BODY (
    p_b09_id_llave_body IN  BNMAIE09_LLAVE_BODY.B09_ID_LLAVE_BODY%TYPE,
    o_cursor            OUT SYS_REFCURSOR,
    code_rpta           OUT VARCHAR2,
    desc_rpta           OUT VARCHAR2
  );

  -- SP_02: Listar todas las llaves de cuerpo
  PROCEDURE SP_02_SELECCIONAR_LLAVES_BODY (
    o_cursor   OUT SYS_REFCURSOR,
    code_rpta  OUT VARCHAR2,
    desc_rpta  OUT VARCHAR2
  );

  -- SP_03: Actualizar llave de cuerpo
  PROCEDURE SP_03_ACTUALIZAR_LLAVE_BODY (
    p_b09_id_llave_body     IN BNMAIE09_LLAVE_BODY.B09_ID_LLAVE_BODY%TYPE,
    p_b02_id_operacion      IN BNMAIE09_LLAVE_BODY.B02_ID_OPERACION%TYPE,
    p_b01_id_entidad        IN BNMAIE09_LLAVE_BODY.B01_ID_ENTIDAD%TYPE,
    p_b09_tag_name          IN BNMAIE09_LLAVE_BODY.B09_TAG_NAME%TYPE,
    p_b09_tipo_origen       IN BNMAIE09_LLAVE_BODY.B09_TIPO_ORIGEN%TYPE,
    p_b09_id_llave_padre    IN BNMAIE09_LLAVE_BODY.B09_ID_LLAVE_PADRE%TYPE,
    p_b09_tipo_dato_esperado IN BNMAIE09_LLAVE_BODY.B09_TIPO_DATO_ESPERADO%TYPE,
    p_b09_es_padre          IN BNMAIE09_LLAVE_BODY.B09_ES_PADRE%TYPE,
    p_b09_valor_defecto     IN BNMAIE09_LLAVE_BODY.B09_VALOR_DEFECTO%TYPE,
    p_b09_orden             IN BNMAIE09_LLAVE_BODY.B09_ORDEN%TYPE,
    p_b09_ind_obligatorio   IN BNMAIE09_LLAVE_BODY.B09_IND_OBLIGATORIO%TYPE,
    p_b09_descripcion       IN BNMAIE09_LLAVE_BODY.B09_DESCRIPCION%TYPE,
    p_b09_ind_mapeable      IN BNMAIE09_LLAVE_BODY.B09_IND_MAPEABLE%TYPE,
    p_b09_usu_mod           IN BNMAIE09_LLAVE_BODY.B09_USU_MOD%TYPE,
    code_rpta               OUT VARCHAR2,
    desc_rpta               OUT VARCHAR2
  );

  -- SP_04: Insertar una nueva llave de cuerpo
  PROCEDURE SP_04_INSERTAR_LLAVE_BODY (
    p_b02_id_operacion      IN  BNMAIE09_LLAVE_BODY.B02_ID_OPERACION%TYPE,
    p_b01_id_entidad        IN  BNMAIE09_LLAVE_BODY.B01_ID_ENTIDAD%TYPE,
    p_b09_tag_name          IN  BNMAIE09_LLAVE_BODY.B09_TAG_NAME%TYPE,
    p_b09_tipo_origen       IN  BNMAIE09_LLAVE_BODY.B09_TIPO_ORIGEN%TYPE,
    p_b09_id_llave_padre    IN  BNMAIE09_LLAVE_BODY.B09_ID_LLAVE_PADRE%TYPE,
    p_b09_tipo_dato_esperado IN BNMAIE09_LLAVE_BODY.B09_TIPO_DATO_ESPERADO%TYPE,
    p_b09_es_padre          IN  BNMAIE09_LLAVE_BODY.B09_ES_PADRE%TYPE,
    p_b09_valor_defecto     IN  BNMAIE09_LLAVE_BODY.B09_VALOR_DEFECTO%TYPE,
    p_b09_orden             IN  BNMAIE09_LLAVE_BODY.B09_ORDEN%TYPE,
    p_b09_ind_obligatorio   IN  BNMAIE09_LLAVE_BODY.B09_IND_OBLIGATORIO%TYPE,
    p_b09_descripcion       IN  BNMAIE09_LLAVE_BODY.B09_DESCRIPCION%TYPE,
    p_b09_ind_mapeable      IN  BNMAIE09_LLAVE_BODY.B09_IND_MAPEABLE%TYPE,
    p_b09_usu_cre           IN  BNMAIE09_LLAVE_BODY.B09_USU_CRE%TYPE,
    o_b09_id_llave_body     OUT BNMAIE09_LLAVE_BODY.B09_ID_LLAVE_BODY%TYPE,
    code_rpta               OUT VARCHAR2,
    desc_rpta               OUT VARCHAR2
  );

  -- SP_05: Buscar llaves de cuerpo por Operación, Entidad y opcionalmente por llave padre y tipo de origen
  PROCEDURE SP_05_BUSCAR_LLAVES_POR_OPERACION (
    p_b02_id_operacion IN  BNMAIE09_LLAVE_BODY.B02_ID_OPERACION%TYPE,
    p_b01_id_entidad   IN  BNMAIE09_LLAVE_BODY.B01_ID_ENTIDAD%TYPE,
    p_b09_tipo_origen  IN  BNMAIE09_LLAVE_BODY.B09_TIPO_ORIGEN%TYPE, -- Opcional: 1=Request, 2=Response
    p_b09_id_llave_padre IN BNMAIE09_LLAVE_BODY.B09_ID_LLAVE_PADRE%TYPE, -- Opcional: NULL para llaves raíz
    o_cursor           OUT SYS_REFCURSOR,
    code_rpta          OUT VARCHAR2,
    desc_rpta          OUT VARCHAR2
  );

END BNPKG_MAIE_LLAVE_BODY09;

/

  GRANT EXECUTE ON "BN_MAIE"."BNPKG_MAIE_LLAVE_BODY09" TO "BNRL_MAIE";
--------------------------------------------------------
--  DDL for Package BNPKG_MAIE_MAPEO10
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE "BN_MAIE"."BNPKG_MAIE_MAPEO10" AS

  -- Constantes de respuesta estándar
  c_cod_ok     CONSTANT VARCHAR2(4) := '0000';
  c_msg_ok     CONSTANT VARCHAR2(100) := 'Proceso exitoso.';
  c_cod_error  CONSTANT VARCHAR2(4) := '0999';

  -- SP_01: Buscar mapeo por su ID
  PROCEDURE SP_01_BUSCAR_MAPEO (
    p_b10_id_mapeo IN  BNMAIE10_MAPEO.B10_ID_MAPEO%TYPE,
    o_cursor       OUT SYS_REFCURSOR,
    code_rpta      OUT VARCHAR2,
    desc_rpta      OUT VARCHAR2
  );

  -- SP_02: Listar todos los mapeos
  PROCEDURE SP_02_SELECCIONAR_MAPEOS (
    o_cursor   OUT SYS_REFCURSOR,
    code_rpta  OUT VARCHAR2,
    desc_rpta  OUT VARCHAR2
  );

  -- SP_03: Actualizar mapeo
  PROCEDURE SP_03_ACTUALIZAR_MAPEO (
    p_b10_id_mapeo            IN BNMAIE10_MAPEO.B10_ID_MAPEO%TYPE,
    p_b02_id_operacion        IN BNMAIE10_MAPEO.B02_ID_OPERACION%TYPE,
    p_b01_id_entidad          IN BNMAIE10_MAPEO.B01_ID_ENTIDAD%TYPE,
    p_b08_id_campo_trama      IN BNMAIE10_MAPEO.B08_ID_CAMPO_TRAMA%TYPE,
    p_b09_id_llave_body       IN BNMAIE10_MAPEO.B09_ID_LLAVE_BODY%TYPE,
    p_b10_ind_transformacion  IN BNMAIE10_MAPEO.B10_IND_TRANSFORMACION%TYPE,
    p_b10_expresion_transform IN BNMAIE10_MAPEO.B10_EXPRESION_TRANSFORM%TYPE,
    p_b10_ind_trim            IN BNMAIE10_MAPEO.B10_IND_TRIM%TYPE,
    p_b10_ind_autocompletar   IN BNMAIE10_MAPEO.B10_IND_AUTOCOMPLETAR%TYPE,
    p_b10_valor_autocompletar IN BNMAIE10_MAPEO.B10_VALOR_AUTOCOMPLETAR%TYPE,
    p_b10_descripcion         IN BNMAIE10_MAPEO.B10_DESCRIPCION%TYPE,
    p_b10_usu_mod             IN BNMAIE10_MAPEO.B10_USU_MOD%TYPE,
    code_rpta                 OUT VARCHAR2,
    desc_rpta                 OUT VARCHAR2
  );

  -- SP_04: Insertar un nuevo mapeo
  PROCEDURE SP_04_INSERTAR_MAPEO (
    p_b02_id_operacion        IN  BNMAIE10_MAPEO.B02_ID_OPERACION%TYPE,
    p_b01_id_entidad          IN  BNMAIE10_MAPEO.B01_ID_ENTIDAD%TYPE,
    p_b08_id_campo_trama      IN  BNMAIE10_MAPEO.B08_ID_CAMPO_TRAMA%TYPE,
    p_b09_id_llave_body       IN  BNMAIE10_MAPEO.B09_ID_LLAVE_BODY%TYPE,
    p_b10_ind_transformacion  IN  BNMAIE10_MAPEO.B10_IND_TRANSFORMACION%TYPE,
    p_b10_expresion_transform IN  BNMAIE10_MAPEO.B10_EXPRESION_TRANSFORM%TYPE,
    p_b10_ind_trim            IN  BNMAIE10_MAPEO.B10_IND_TRIM%TYPE,
    p_b10_ind_autocompletar   IN  BNMAIE10_MAPEO.B10_IND_AUTOCOMPLETAR%TYPE,
    p_b10_valor_autocompletar IN  BNMAIE10_MAPEO.B10_VALOR_AUTOCOMPLETAR%TYPE,
    p_b10_descripcion         IN  BNMAIE10_MAPEO.B10_DESCRIPCION%TYPE,
    p_b10_usu_cre             IN  BNMAIE10_MAPEO.B10_USU_CRE%TYPE,
    o_b10_id_mapeo            OUT BNMAIE10_MAPEO.B10_ID_MAPEO%TYPE,
    code_rpta                 OUT VARCHAR2,
    desc_rpta                 OUT VARCHAR2
  );

  -- SP_05: Buscar mapeos por Operación y Entidad (para listar mapeos de una operación específica)
  PROCEDURE SP_05_BUSCAR_MAPEOS_POR_OPERACION (
    p_b02_id_operacion IN  BNMAIE10_MAPEO.B02_ID_OPERACION%TYPE,
    p_b01_id_entidad   IN  BNMAIE10_MAPEO.B01_ID_ENTIDAD%TYPE,
    o_cursor           OUT SYS_REFCURSOR,
    code_rpta          OUT VARCHAR2,
    desc_rpta          OUT VARCHAR2
  );

END BNPKG_MAIE_MAPEO10;

/

  GRANT EXECUTE ON "BN_MAIE"."BNPKG_MAIE_MAPEO10" TO "BNRL_MAIE";
--------------------------------------------------------
--  DDL for Package BNPKG_MAIE_OPERACION02
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE "BN_MAIE"."BNPKG_MAIE_OPERACION02" AS
      -- Constantes de respuesta
      c_cod_ok     CONSTANT VARCHAR2(4) := '0000';
      c_msg_ok     CONSTANT VARCHAR2(100) := 'Proceso exitoso.';
      c_cod_error  CONSTANT VARCHAR2(4) := '0999';

      -- SP_01: Buscar operación por ID de Operación, ID de Entidad y Código de Operación
      PROCEDURE SP_01_BUSCAR_OPERACION (
        p_b02_id_operacion  IN  BNMAIE02_OPERACION.B02_ID_OPERACION%TYPE,
        p_b01_id_entidad    IN  BNMAIE02_OPERACION.B01_ID_ENTIDAD%TYPE,
        p_b02_cod_operacion IN  BNMAIE02_OPERACION.B02_COD_OPERACION%TYPE, -- Nuevo parámetro
        o_cursor            OUT SYS_REFCURSOR,
        code_rpta           OUT VARCHAR2,
        desc_rpta           OUT VARCHAR2
      );

      -- SP_02: Listar todas las operaciones con info de entidad
      PROCEDURE SP_02_SELECCIONAR_OPERACIONES (
        o_cursor   OUT SYS_REFCURSOR,
        code_rpta  OUT VARCHAR2,
        desc_rpta  OUT VARCHAR2
      );

      -- SP_03: Actualizar operación
      PROCEDURE SP_03_ACTUALIZAR_OPERACION (
        p_b02_id_operacion      IN BNMAIE02_OPERACION.B02_ID_OPERACION%TYPE,
        p_b01_id_entidad        IN BNMAIE02_OPERACION.B01_ID_ENTIDAD%TYPE,
        p_b02_cod_operacion     IN BNMAIE02_OPERACION.B02_COD_OPERACION%TYPE, -- Nuevo parámetro (para WHERE)
        p_b07_id_conexion       IN BNMAIE02_OPERACION.B07_ID_CONEXION%TYPE,
        p_b02_descripcion       IN BNMAIE02_OPERACION.B02_DESCRIPCION%TYPE,
        p_b02_requiere_body_envio IN BNMAIE02_OPERACION.B02_REQUIERE_BODY_ENVIO%TYPE,
        p_b02_usu_mod           IN BNMAIE02_OPERACION.B02_USU_MOD%TYPE,
        code_rpta               OUT VARCHAR2,
        desc_rpta               OUT VARCHAR2
      );

      -- SP_04: Insertar operación
      PROCEDURE SP_04_INSERTAR_OPERACION (
        p_b01_id_entidad        IN  BNMAIE02_OPERACION.B01_ID_ENTIDAD%TYPE,
        p_b07_id_conexion       IN  BNMAIE02_OPERACION.B07_ID_CONEXION%TYPE,
        p_b02_descripcion       IN  BNMAIE02_OPERACION.B02_DESCRIPCION%TYPE,
        p_b02_requiere_body_envio IN BNMAIE02_OPERACION.B02_REQUIERE_BODY_ENVIO%TYPE,
        p_b02_cod_operacion     IN  BNMAIE02_OPERACION.B02_COD_OPERACION%TYPE, -- Nuevo parámetro
        p_b02_usu_cre           IN  BNMAIE02_OPERACION.B02_USU_CRE%TYPE,
        o_b02_id_operacion      OUT BNMAIE02_OPERACION.B02_ID_OPERACION%TYPE, -- Retorna el ID generado
        code_rpta               OUT VARCHAR2,
        desc_rpta               OUT VARCHAR2
      );

END BNPKG_MAIE_OPERACION02;

/

  GRANT EXECUTE ON "BN_MAIE"."BNPKG_MAIE_OPERACION02" TO "BNRL_MAIE";
--------------------------------------------------------
--  DDL for Package BNPKG_MAIE_PARAMETRO04
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE "BN_MAIE"."BNPKG_MAIE_PARAMETRO04" AS
    /*------------------------------------------
       Constantes de respuesta
    ------------------------------------------*/
    c_cod_ok     CONSTANT VARCHAR2(4)   := '0000';
    c_msg_ok     CONSTANT VARCHAR2(100) := 'Proceso exitoso.';
    c_cod_error  CONSTANT VARCHAR2(4)   := '0999';

    /*------------------------------------------
       Declaración de procedimientos
    ------------------------------------------*/

    -- 01. Buscar por grupo, código, operación y entidad
    PROCEDURE SP_01_BUSCAR_PARAMETRO (
        p_cod_grup      IN  BNMAIE04_PARAMETRO.B04_COD_GRUP%TYPE,
        p_cod_para      IN  BNMAIE04_PARAMETRO.B04_COD_PARA%TYPE,
        p_cod_oper      IN  BNMAIE04_PARAMETRO.B04_COD_OPER%TYPE,
        p_id_entidad_fk IN  BNMAIE04_PARAMETRO.B01_ID_ENTIDAD_FK%TYPE,
        o_cursor        OUT SYS_REFCURSOR,
        code_rpta       OUT VARCHAR2,
        desc_rpta       OUT VARCHAR2
    );

    -- 02. Listar todos los parámetros
    PROCEDURE SP_02_SELECCIONAR_PARAMETROS (
        o_cursor   OUT SYS_REFCURSOR,
        code_rpta  OUT VARCHAR2,
        desc_rpta  OUT VARCHAR2
    );

    -- 03. Insertar nuevo parámetro
    PROCEDURE SP_03_INSERTAR_PARAMETRO (
        p_cod_grup      IN  BNMAIE04_PARAMETRO.B04_COD_GRUP%TYPE,
        p_cod_para      IN  BNMAIE04_PARAMETRO.B04_COD_PARA%TYPE,
        p_descrip       IN  BNMAIE04_PARAMETRO.B04_DESCRIP%TYPE,
        p_valor1        IN  BNMAIE04_PARAMETRO.B04_VAL_01%TYPE,
        p_valor2        IN  BNMAIE04_PARAMETRO.B04_VAL_02%TYPE,
        p_valor3        IN  BNMAIE04_PARAMETRO.B04_VAL_03%TYPE, -- Nuevo parámetro
        p_ind_act       IN  BNMAIE04_PARAMETRO.B04_IND_ACT%TYPE,
        p_cod_oper      IN  BNMAIE04_PARAMETRO.B04_COD_OPER%TYPE,
        p_id_entidad_fk IN  BNMAIE04_PARAMETRO.B01_ID_ENTIDAD_FK%TYPE, -- Nuevo parámetro
        p_usu_cre       IN  BNMAIE04_PARAMETRO.B04_USU_CRE%TYPE,
        code_rpta       OUT VARCHAR2,
        desc_rpta       OUT VARCHAR2
    );

    -- 04. Actualizar parámetro (con operación asociada)
    PROCEDURE SP_04_ACTUALIZAR_PARAMETRO_OP (
        p_id_para       IN  BNMAIE04_PARAMETRO.B04_ID_PARA%TYPE,
        p_valor1        IN  BNMAIE04_PARAMETRO.B04_VAL_01%TYPE,
        p_valor2        IN  BNMAIE04_PARAMETRO.B04_VAL_02%TYPE,
        p_valor3        IN  BNMAIE04_PARAMETRO.B04_VAL_03%TYPE, -- Nuevo parámetro
        p_ind_act       IN  BNMAIE04_PARAMETRO.B04_IND_ACT%TYPE,
        p_cod_oper      IN  BNMAIE04_PARAMETRO.B04_COD_OPER%TYPE, -- Se mantiene, para validación o referencia
        p_id_entidad_fk IN  BNMAIE04_PARAMETRO.B01_ID_ENTIDAD_FK%TYPE, -- Nuevo parámetro
        p_usu_mod       IN  BNMAIE04_PARAMETRO.B04_USU_MOD%TYPE,
        code_rpta       OUT VARCHAR2,
        desc_rpta       OUT VARCHAR2
    );

    -- 05. Actualizar parámetro (genérico, por ID_PARA)
    PROCEDURE SP_05_ACTUALIZAR_PARAMETRO_GEN (
        p_id_para  IN  BNMAIE04_PARAMETRO.B04_ID_PARA%TYPE,
        p_desc     IN  BNMAIE04_PARAMETRO.B04_DESCRIP%TYPE,
        p_valor1   IN  BNMAIE04_PARAMETRO.B04_VAL_01%TYPE,
        p_valor2   IN  BNMAIE04_PARAMETRO.B04_VAL_02%TYPE,
        p_valor3   IN  BNMAIE04_PARAMETRO.B04_VAL_03%TYPE, -- Nuevo parámetro
        p_ind_act  IN  BNMAIE04_PARAMETRO.B04_IND_ACT%TYPE,
        p_usu_mod  IN  BNMAIE04_PARAMETRO.B04_USU_MOD%TYPE,
        code_rpta  OUT VARCHAR2,
        desc_rpta  OUT VARCHAR2
    );

    -- 06. Crear grupo (código de parámetro = '0')
    PROCEDURE SP_06_CREAR_GRUPO (
        p_cod_grup      IN  BNMAIE04_PARAMETRO.B04_COD_GRUP%TYPE,
        p_descrip       IN  BNMAIE04_PARAMETRO.B04_DESCRIP%TYPE,
        p_cod_oper      IN  BNMAIE04_PARAMETRO.B04_COD_OPER%TYPE, -- Nuevo parámetro
        p_id_entidad_fk IN  BNMAIE04_PARAMETRO.B01_ID_ENTIDAD_FK%TYPE, -- Nuevo parámetro
        p_usu_cre       IN  BNMAIE04_PARAMETRO.B04_USU_CRE%TYPE,
        code_rpta       OUT VARCHAR2,
        desc_rpta       OUT VARCHAR2
    );

    -- 07. Listar grupos (parámetros con código '0')
    PROCEDURE SP_07_SELECCIONAR_GRUPOS (
        o_cursor   OUT SYS_REFCURSOR,
        code_rpta  OUT VARCHAR2,
        desc_rpta  OUT VARCHAR2
    );

    -- 08. Listar parámetros de un grupo, operación y entidad
    PROCEDURE SP_08_SELECCIONAR_PARAMETROS_GRUPO (
        p_cod_grup      IN  BNMAIE04_PARAMETRO.B04_COD_GRUP%TYPE,
        p_cod_oper      IN  BNMAIE04_PARAMETRO.B04_COD_OPER%TYPE, -- Nuevo parámetro
        p_id_entidad_fk IN  BNMAIE04_PARAMETRO.B01_ID_ENTIDAD_FK%TYPE, -- Nuevo parámetro
        o_cursor        OUT SYS_REFCURSOR,
        code_rpta       OUT VARCHAR2,
        desc_rpta       OUT VARCHAR2
    );

    -- 09. Obtener el máximo código de parámetro para un grupo, operación y entidad
    PROCEDURE SP_09_OBTENER_MAXIMO_PARAMETRO(
        p_cod_grup      IN  BNMAIE04_PARAMETRO.B04_COD_GRUP%TYPE,
        p_cod_oper      IN  BNMAIE04_PARAMETRO.B04_COD_OPER%TYPE, -- Nuevo parámetro
        p_id_entidad_fk IN  BNMAIE04_PARAMETRO.B01_ID_ENTIDAD_FK%TYPE, -- Nuevo parámetro
        p_cod_nuevo     OUT VARCHAR2,
        code_rpta       OUT VARCHAR2,
        desc_rpta       OUT VARCHAR2
    );
END BNPKG_MAIE_PARAMETRO04;

/

  GRANT EXECUTE ON "BN_MAIE"."BNPKG_MAIE_PARAMETRO04" TO "BNRL_MAIE";
--------------------------------------------------------
--  DDL for Package Body BNPKG_MAIE_CAMPO_TRAMA08
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "BN_MAIE"."BNPKG_MAIE_CAMPO_TRAMA08" AS

  -- SP_01: Buscar campo de trama por su ID
  PROCEDURE SP_01_BUSCAR_CAMPO_TRAMA (
    p_b08_id_campo_trama IN  BNMAIE08_CAMPO_TRAMA.B08_ID_CAMPO_TRAMA%TYPE,
    o_cursor             OUT SYS_REFCURSOR,
    code_rpta            OUT VARCHAR2,
    desc_rpta            OUT VARCHAR2
  ) IS
  BEGIN
    OPEN o_cursor FOR
      SELECT B08_ID_CAMPO_TRAMA, B02_ID_OPERACION, B01_ID_ENTIDAD, B08_TAG_NAME,
             B08_ORDEN, B08_TIPO_ORIGEN, B08_TIPO_CAMPO, B08_TIPO_DATO,
             B08_LONGITUD, B08_IND_RELLENO, B08_VALOR_RELLENO, B08_VALOR_DEFECTO,
             B08_USU_CRE, B08_FEC_CRE, B08_USU_MOD, B08_FEC_MOD, B08_ALINEACION
        FROM BNMAIE08_CAMPO_TRAMA
       WHERE B08_ID_CAMPO_TRAMA = p_b08_id_campo_trama;

    code_rpta := c_cod_ok;
    desc_rpta := c_msg_ok;

  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      code_rpta := c_cod_error;
      desc_rpta := 'Campo de trama no encontrado.';
    WHEN OTHERS THEN
      code_rpta := c_cod_error;
      desc_rpta := 'Error en SP_01_BUSCAR_CAMPO_TRAMA: ' || SQLERRM;
  END SP_01_BUSCAR_CAMPO_TRAMA;

  -- SP_02: Listar todos los campos de trama
  PROCEDURE SP_02_SELECCIONAR_CAMPOS_TRAMA (
    o_cursor   OUT SYS_REFCURSOR,
    code_rpta  OUT VARCHAR2,
    desc_rpta  OUT VARCHAR2
  ) IS
  BEGIN
    OPEN o_cursor FOR
      SELECT B08_ID_CAMPO_TRAMA, B02_ID_OPERACION, B01_ID_ENTIDAD, B08_TAG_NAME,
             B08_ORDEN, B08_TIPO_ORIGEN, B08_TIPO_CAMPO, B08_TIPO_DATO,
             B08_LONGITUD, B08_IND_RELLENO, B08_VALOR_RELLENO, B08_VALOR_DEFECTO,
             B08_USU_CRE, B08_FEC_CRE, B08_USU_MOD, B08_FEC_MOD, B08_ALINEACION
        FROM BNMAIE08_CAMPO_TRAMA;

    code_rpta := c_cod_ok;
    desc_rpta := c_msg_ok;

  EXCEPTION
    WHEN OTHERS THEN
      code_rpta := c_cod_error;
      desc_rpta := 'Error en SP_02_SELECCIONAR_CAMPOS_TRAMA: ' || SQLERRM;
  END SP_02_SELECCIONAR_CAMPOS_TRAMA;

  -- SP_03: Actualizar campo de trama
  PROCEDURE SP_03_ACTUALIZAR_CAMPO_TRAMA (
    p_b08_id_campo_trama      IN BNMAIE08_CAMPO_TRAMA.B08_ID_CAMPO_TRAMA%TYPE,
    p_b02_id_operacion        IN BNMAIE08_CAMPO_TRAMA.B02_ID_OPERACION%TYPE,
    p_b01_id_entidad          IN BNMAIE08_CAMPO_TRAMA.B01_ID_ENTIDAD%TYPE,
    p_b08_tag_name            IN BNMAIE08_CAMPO_TRAMA.B08_TAG_NAME%TYPE,
    p_b08_orden               IN BNMAIE08_CAMPO_TRAMA.B08_ORDEN%TYPE,
    p_b08_tipo_origen         IN BNMAIE08_CAMPO_TRAMA.B08_TIPO_ORIGEN%TYPE,
    p_b08_tipo_campo          IN BNMAIE08_CAMPO_TRAMA.B08_TIPO_CAMPO%TYPE,
    p_b08_tipo_dato           IN BNMAIE08_CAMPO_TRAMA.B08_TIPO_DATO%TYPE,
    p_b08_longitud            IN BNMAIE08_CAMPO_TRAMA.B08_LONGITUD%TYPE,
    p_b08_ind_relleno         IN BNMAIE08_CAMPO_TRAMA.B08_IND_RELLENO%TYPE,
    p_b08_valor_relleno       IN BNMAIE08_CAMPO_TRAMA.B08_VALOR_RELLENO%TYPE,
    p_b08_valor_defecto       IN BNMAIE08_CAMPO_TRAMA.B08_VALOR_DEFECTO%TYPE,
    p_b08_alineacion          IN BNMAIE08_CAMPO_TRAMA.B08_ALINEACION%TYPE,
    p_b08_usu_mod             IN BNMAIE08_CAMPO_TRAMA.B08_USU_MOD%TYPE,
    code_rpta                 OUT VARCHAR2,
    desc_rpta                 OUT VARCHAR2
  ) IS
  BEGIN
    UPDATE BNMAIE08_CAMPO_TRAMA
       SET B02_ID_OPERACION    = p_b02_id_operacion,
           B01_ID_ENTIDAD      = p_b01_id_entidad,
           B08_TAG_NAME        = p_b08_tag_name,
           B08_ORDEN           = p_b08_orden,
           B08_TIPO_ORIGEN     = p_b08_tipo_origen,
           B08_TIPO_CAMPO      = p_b08_tipo_campo,
           B08_TIPO_DATO       = p_b08_tipo_dato,
           B08_LONGITUD        = p_b08_longitud,
           B08_IND_RELLENO     = p_b08_ind_relleno,
           B08_VALOR_RELLENO   = p_b08_valor_relleno,
           B08_VALOR_DEFECTO   = p_b08_valor_defecto,
           B08_ALINEACION      = p_b08_alineacion,
           B08_USU_MOD         = p_b08_usu_mod,
           B08_FEC_MOD         = SYSDATE
     WHERE B08_ID_CAMPO_TRAMA = p_b08_id_campo_trama;

    IF SQL%ROWCOUNT = 0 THEN
      code_rpta := c_cod_error;
      desc_rpta := 'No se encontró el campo de trama para actualizar.';
    ELSE
      code_rpta := c_cod_ok;
      desc_rpta := c_msg_ok;
    END IF;

  EXCEPTION
    WHEN OTHERS THEN
      code_rpta := c_cod_error;
      desc_rpta := 'Error en SP_03_ACTUALIZAR_CAMPO_TRAMA: ' || SQLERRM;
  END SP_03_ACTUALIZAR_CAMPO_TRAMA;

  -- SP_04: Insertar un nuevo campo de trama
  PROCEDURE SP_04_INSERTAR_CAMPO_TRAMA (
    p_b02_id_operacion        IN  BNMAIE08_CAMPO_TRAMA.B02_ID_OPERACION%TYPE,
    p_b01_id_entidad          IN  BNMAIE08_CAMPO_TRAMA.B01_ID_ENTIDAD%TYPE,
    p_b08_tag_name            IN  BNMAIE08_CAMPO_TRAMA.B08_TAG_NAME%TYPE,
    p_b08_orden               IN  BNMAIE08_CAMPO_TRAMA.B08_ORDEN%TYPE,
    p_b08_tipo_origen         IN  BNMAIE08_CAMPO_TRAMA.B08_TIPO_ORIGEN%TYPE,
    p_b08_tipo_campo          IN  BNMAIE08_CAMPO_TRAMA.B08_TIPO_CAMPO%TYPE,
    p_b08_tipo_dato           IN  BNMAIE08_CAMPO_TRAMA.B08_TIPO_DATO%TYPE,
    p_b08_longitud            IN  BNMAIE08_CAMPO_TRAMA.B08_LONGITUD%TYPE,
    p_b08_ind_relleno         IN  BNMAIE08_CAMPO_TRAMA.B08_IND_RELLENO%TYPE,
    p_b08_valor_relleno       IN  BNMAIE08_CAMPO_TRAMA.B08_VALOR_RELLENO%TYPE,
    p_b08_valor_defecto       IN  BNMAIE08_CAMPO_TRAMA.B08_VALOR_DEFECTO%TYPE,
    p_b08_alineacion          IN  BNMAIE08_CAMPO_TRAMA.B08_ALINEACION%TYPE,
    p_b08_usu_cre             IN  BNMAIE08_CAMPO_TRAMA.B08_USU_CRE%TYPE,
    o_b08_id_campo_trama      OUT BNMAIE08_CAMPO_TRAMA.B08_ID_CAMPO_TRAMA%TYPE,
    code_rpta                 OUT VARCHAR2,
    desc_rpta                 OUT VARCHAR2
  ) IS
    v_new_id_campo_trama NUMBER(10);
  BEGIN
    -- Obtener el siguiente valor de la secuencia para B08_ID_CAMPO_TRAMA
    SELECT BNSQ_08_CAMPO_TRAMA.NEXTVAL INTO v_new_id_campo_trama FROM DUAL;

    INSERT INTO BNMAIE08_CAMPO_TRAMA (
      B08_ID_CAMPO_TRAMA, B02_ID_OPERACION, B01_ID_ENTIDAD, B08_TAG_NAME,
      B08_ORDEN, B08_TIPO_ORIGEN, B08_TIPO_CAMPO, B08_TIPO_DATO,
      B08_LONGITUD, B08_IND_RELLENO, B08_VALOR_RELLENO, B08_VALOR_DEFECTO,
      B08_ALINEACION, B08_USU_CRE, B08_FEC_CRE
    ) VALUES (
      v_new_id_campo_trama, p_b02_id_operacion, p_b01_id_entidad, p_b08_tag_name,
      p_b08_orden, p_b08_tipo_origen, p_b08_tipo_campo, p_b08_tipo_dato,
      p_b08_longitud, p_b08_ind_relleno, p_b08_valor_relleno, p_b08_valor_defecto,
      p_b08_alineacion, p_b08_usu_cre, SYSDATE
    );

    o_b08_id_campo_trama := v_new_id_campo_trama;
    code_rpta := c_cod_ok;
    desc_rpta := c_msg_ok;

  EXCEPTION
    WHEN OTHERS THEN
      o_b08_id_campo_trama := NULL;
      code_rpta := c_cod_error;
      desc_rpta := 'Error en SP_04_INSERTAR_CAMPO_TRAMA: ' || SQLERRM;
  END SP_04_INSERTAR_CAMPO_TRAMA;

  -- SP_05: Buscar campos de trama por Operación y Entidad (para listar campos de una operación específica)
  PROCEDURE SP_05_BUSCAR_CAMPOS_POR_OPERACION (
    p_b02_id_operacion IN  BNMAIE08_CAMPO_TRAMA.B02_ID_OPERACION%TYPE,
    p_b01_id_entidad   IN  BNMAIE08_CAMPO_TRAMA.B01_ID_ENTIDAD%TYPE,
    p_b08_tipo_origen  IN  BNMAIE08_CAMPO_TRAMA.B08_TIPO_ORIGEN%TYPE,
    o_cursor           OUT SYS_REFCURSOR,
    code_rpta          OUT VARCHAR2,
    desc_rpta          OUT VARCHAR2
  ) IS
  BEGIN
    OPEN o_cursor FOR
      SELECT B08_ID_CAMPO_TRAMA, B02_ID_OPERACION, B01_ID_ENTIDAD, B08_TAG_NAME,
             B08_ORDEN, B08_TIPO_ORIGEN, B08_TIPO_CAMPO, B08_TIPO_DATO,
             B08_LONGITUD, B08_IND_RELLENO, B08_VALOR_RELLENO, B08_VALOR_DEFECTO,
             B08_USU_CRE, B08_FEC_CRE, B08_USU_MOD, B08_FEC_MOD, B08_ALINEACION
        FROM BNMAIE08_CAMPO_TRAMA
       WHERE B02_ID_OPERACION = p_b02_id_operacion
         AND B01_ID_ENTIDAD = p_b01_id_entidad
         AND (p_b08_tipo_origen IS NULL OR B08_TIPO_ORIGEN = p_b08_tipo_origen) -- Permite filtrar opcionalmente por tipo de origen
       ORDER BY B08_ORDEN;

    code_rpta := c_cod_ok;
    desc_rpta := c_msg_ok;

  EXCEPTION
    WHEN OTHERS THEN
      code_rpta := c_cod_error;
      desc_rpta := 'Error en SP_05_BUSCAR_CAMPOS_POR_OPERACION: ' || SQLERRM;
  END SP_05_BUSCAR_CAMPOS_POR_OPERACION;

END BNPKG_MAIE_CAMPO_TRAMA08;

/

  GRANT EXECUTE ON "BN_MAIE"."BNPKG_MAIE_CAMPO_TRAMA08" TO "BNRL_MAIE";
--------------------------------------------------------
--  DDL for Package Body BNPKG_MAIE_CONEXION07
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "BN_MAIE"."BNPKG_MAIE_CONEXION07" AS

  PROCEDURE SP_01_BUSCAR_CONEXION (
    p_b07_id_con   IN  BNMAIE07_CONEXION.B07_ID_CONEXION%TYPE, -- Se corrigió el nombre del parámetro
    o_cursor  OUT SYS_REFCURSOR,
    code_rpta      OUT VARCHAR2,
    desc_rpta      OUT VARCHAR2
  ) IS
  BEGIN
    -- Se corrigió el nombre de la columna en la cláusula WHERE
    OPEN o_cursor FOR
      SELECT *
        FROM BNMAIE07_CONEXION
       WHERE B07_ID_CONEXION = p_b07_id_con;

    code_rpta := c_cod_ok;
    desc_rpta := c_msg_ok;

  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      code_rpta := c_cod_error;
      desc_rpta := 'Conexión no encontrada.';
    WHEN OTHERS THEN
      code_rpta := c_cod_error;
      desc_rpta := 'Error: ' || SQLERRM;
  END SP_01_BUSCAR_CONEXION;

  PROCEDURE SP_02_SELECCIONAR_CONEXIONES (
    o_cursor   OUT SYS_REFCURSOR,
    code_rpta  OUT VARCHAR2,
    desc_rpta  OUT VARCHAR2
  ) IS
  BEGIN
    -- Se eliminó la condición WHERE B07_IND_ACT = '1' ya que la columna no existe en la tabla.
    OPEN o_cursor FOR
      SELECT *
        FROM BNMAIE07_CONEXION;

    code_rpta := c_cod_ok;
    desc_rpta := c_msg_ok;

  EXCEPTION
    WHEN OTHERS THEN
      code_rpta := c_cod_error;
      desc_rpta := 'Error: ' || SQLERRM;
  END SP_02_SELECCIONAR_CONEXIONES;

  PROCEDURE SP_03_ACTUALIZAR_CONEXION (
    p_b07_id_con            IN BNMAIE07_CONEXION.B07_ID_CONEXION%TYPE, -- Se corrigió el nombre del parámetro
    p_b01_id_entidad        IN BNMAIE07_CONEXION.B01_ID_ENTIDAD%TYPE, -- Se añadió el parámetro
    p_b07_protocolo         IN BNMAIE07_CONEXION.B07_PROTOCOLO%TYPE, -- Se corrigió el nombre y tipo del parámetro
    p_b07_host              IN BNMAIE07_CONEXION.B07_HOST%TYPE,
    p_b07_puerto            IN BNMAIE07_CONEXION.B07_PUERTO%TYPE,
    p_b07_usa_tls           IN BNMAIE07_CONEXION.B07_USA_TLS%TYPE, -- Se corrigió el nombre del parámetro
    p_b07_ind_credenciales  IN BNMAIE07_CONEXION.B07_IND_CREDENCIALES%TYPE, -- Se añadió el parámetro
    p_b07_timeout_conexion_ms IN BNMAIE07_CONEXION.B07_TIMEOUT_CONEXION_MS%TYPE, -- Se corrigió el nombre del parámetro
    p_b07_timeout_lectura_ms IN BNMAIE07_CONEXION.B07_TIMEOUT_LECTURA_MS%TYPE, -- Se corrigió el nombre del parámetro
    p_b07_max_reintentos    IN BNMAIE07_CONEXION.B07_MAX_REINTENTOS%TYPE, -- Se corrigió el nombre del parámetro
    p_b07_reintento_espera_ms IN BNMAIE07_CONEXION.B07_REINTENTO_ESPERA_MS%TYPE, -- Se corrigió el nombre del parámetro
    p_b07_usu_mod           IN BNMAIE07_CONEXION.B07_USU_MOD%TYPE, -- Se corrigió el nombre del parámetro
    code_rpta               OUT VARCHAR2,
    desc_rpta               OUT VARCHAR2
  ) IS
  BEGIN
    -- Se actualizaron los nombres de las columnas y se añadieron las nuevas.
    -- Se eliminaron las columnas que no existen en la tabla.
    UPDATE BNMAIE07_CONEXION
       SET B01_ID_ENTIDAD          = p_b01_id_entidad,
           B07_PROTOCOLO           = p_b07_protocolo,
           B07_HOST                = p_b07_host,
           B07_PUERTO              = p_b07_puerto,
           B07_USA_TLS             = p_b07_usa_tls,
           B07_IND_CREDENCIALES    = p_b07_ind_credenciales,
           B07_TIMEOUT_CONEXION_MS = p_b07_timeout_conexion_ms,
           B07_TIMEOUT_LECTURA_MS  = p_b07_timeout_lectura_ms,
           B07_MAX_REINTENTOS      = p_b07_max_reintentos,
           B07_REINTENTO_ESPERA_MS = p_b07_reintento_espera_ms,
           B07_USU_MOD             = p_b07_usu_mod,
           B07_FEC_MOD             = SYSDATE
     WHERE B07_ID_CONEXION = p_b07_id_con; -- Se corrigió el nombre de la columna en la cláusula WHERE

    IF SQL%ROWCOUNT = 0 THEN
      code_rpta := c_cod_error;
      desc_rpta := 'No se encontró la conexión para actualizar.';
    ELSE
      code_rpta := c_cod_ok;
      desc_rpta := c_msg_ok;
    END IF;

  EXCEPTION
    WHEN OTHERS THEN
      code_rpta := c_cod_error;
      desc_rpta := 'Error: ' || SQLERRM;
  END SP_03_ACTUALIZAR_CONEXION;

  PROCEDURE SP_04_INSERTAR_CONEXION (
      p_b01_id_entidad        IN BNMAIE07_CONEXION.B01_ID_ENTIDAD%TYPE, -- Se añadió el parámetro
      p_b07_protocolo         IN BNMAIE07_CONEXION.B07_PROTOCOLO%TYPE, -- Se corrigió el nombre y tipo del parámetro
      p_b07_host              IN BNMAIE07_CONEXION.B07_HOST%TYPE,
      p_b07_puerto            IN BNMAIE07_CONEXION.B07_PUERTO%TYPE,
      p_b07_usa_tls           IN BNMAIE07_CONEXION.B07_USA_TLS%TYPE, -- Se corrigió el nombre del parámetro
      p_b07_ind_credenciales  IN BNMAIE07_CONEXION.B07_IND_CREDENCIALES%TYPE, -- Se añadió el parámetro
      p_b07_timeout_conexion_ms IN BNMAIE07_CONEXION.B07_TIMEOUT_CONEXION_MS%TYPE, -- Se corrigió el nombre del parámetro
      p_b07_timeout_lectura_ms IN BNMAIE07_CONEXION.B07_TIMEOUT_LECTURA_MS%TYPE, -- Se corrigió el nombre del parámetro
      p_b07_max_reintentos    IN BNMAIE07_CONEXION.B07_MAX_REINTENTOS%TYPE, -- Se corrigió el nombre del parámetro
      p_b07_reintento_espera_ms IN BNMAIE07_CONEXION.B07_REINTENTO_ESPERA_MS%TYPE, -- Se corrigió el nombre del parámetro
      p_b07_usu_cre           IN BNMAIE07_CONEXION.B07_USU_CRE%TYPE, -- Se corrigió el nombre del parámetro
      code_rpta               OUT VARCHAR2,
      desc_rpta               OUT VARCHAR2
  ) IS
  BEGIN
    -- Se actualizaron los nombres de las columnas y se añadieron las nuevas.
    -- Se eliminaron las columnas que no existen en la tabla.
    INSERT INTO BNMAIE07_CONEXION(
      B07_ID_CONEXION, -- Se corrigió el nombre de la columna
      B01_ID_ENTIDAD,
      B07_PROTOCOLO,
      B07_HOST,
      B07_PUERTO,
      B07_USA_TLS,
      B07_IND_CREDENCIALES,
      B07_TIMEOUT_CONEXION_MS,
      B07_TIMEOUT_LECTURA_MS,
      B07_MAX_REINTENTOS,
      B07_REINTENTO_ESPERA_MS,
      B07_USU_CRE
      -- B07_FEC_CRE tiene un valor por defecto (SYSDATE), no es necesario insertarlo explícitamente
    )
    VALUES (
      BNMAIE07_SEQ.NEXTVAL, -- Secuencia autogenerada para B07_ID_CONEXION
      p_b01_id_entidad,
      p_b07_protocolo,
      p_b07_host,
      p_b07_puerto,
      p_b07_usa_tls,
      p_b07_ind_credenciales,
      p_b07_timeout_conexion_ms,
      p_b07_timeout_lectura_ms,
      p_b07_max_reintentos,
      p_b07_reintento_espera_ms,
      p_b07_usu_cre
    );

    code_rpta := c_cod_ok;
    desc_rpta := c_msg_ok;

  EXCEPTION
    WHEN OTHERS THEN
      code_rpta := c_cod_error;
      desc_rpta := 'Error: ' || SQLERRM;
  END SP_04_INSERTAR_CONEXION;

  PROCEDURE SP_05_BUSCAR_CONEXION_ID (
    p_b07_id_con   IN BNMAIE07_CONEXION.B07_ID_CONEXION%TYPE, -- Se corrigió el nombre del parámetro
    o_cursor  OUT SYS_REFCURSOR,
    code_rpta      OUT VARCHAR2,
    desc_rpta      OUT VARCHAR2
  ) IS
  BEGIN
    -- Se corrigió el nombre de la columna en la cláusula WHERE
    OPEN o_cursor FOR
      SELECT *
        FROM BNMAIE07_CONEXION
       WHERE B07_ID_CONEXION = p_b07_id_con;

    code_rpta := c_cod_ok;
    desc_rpta := c_msg_ok;

  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      code_rpta := c_cod_error;
      desc_rpta := 'Conexión no encontrada.';
    WHEN OTHERS THEN
      code_rpta := c_cod_error;
      desc_rpta := 'Error: ' || SQLERRM;
  END SP_05_BUSCAR_CONEXION_ID;

END BNPKG_MAIE_CONEXION07;

/

  GRANT EXECUTE ON "BN_MAIE"."BNPKG_MAIE_CONEXION07" TO "BNRL_MAIE";
--------------------------------------------------------
--  DDL for Package Body BNPKG_MAIE_ENTIDAD01
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "BN_MAIE"."BNPKG_MAIE_ENTIDAD01" AS

  -- SP_01: Implementación de búsqueda por ID
  PROCEDURE SP_01_BUSCAR_POR_ID (
    p_b01_id_entidad  IN  BNMAIE01_ENTIDAD.B01_ID_ENTIDAD%TYPE,
    o_cursor          OUT SYS_REFCURSOR,
    o_code_rpta       OUT VARCHAR2,
    o_desc_rpta       OUT VARCHAR2
  ) IS
  BEGIN
    OPEN o_cursor FOR
      SELECT *
      FROM BNMAIE01_ENTIDAD
      WHERE B01_ID_ENTIDAD = p_b01_id_entidad;

    o_code_rpta := c_cod_ok;
    o_desc_rpta := c_msg_ok;

  EXCEPTION
    WHEN OTHERS THEN
      o_code_rpta := c_cod_error;
      o_desc_rpta := c_msg_error || ': ' || SQLERRM;
  END SP_01_BUSCAR_POR_ID;


  -- SP_02: Implementación para seleccionar todas las entidades
  PROCEDURE SP_02_SELECCIONAR_TODAS (
    o_cursor    OUT SYS_REFCURSOR,
    o_code_rpta OUT VARCHAR2,
    o_desc_rpta OUT VARCHAR2
  ) IS
  BEGIN
    OPEN o_cursor FOR
      SELECT *
      FROM BNMAIE01_ENTIDAD
      ORDER BY B01_FEC_CRE DESC;

    o_code_rpta := c_cod_ok;
    o_desc_rpta := c_msg_ok;

  EXCEPTION
    WHEN OTHERS THEN
      o_code_rpta := c_cod_error;
      o_desc_rpta := c_msg_error || ': ' || SQLERRM;
  END SP_02_SELECCIONAR_TODAS;


  -- SP_03: Implementación para actualizar una entidad
  PROCEDURE SP_03_ACTUALIZAR (
    p_b01_id_entidad        IN BNMAIE01_ENTIDAD.B01_ID_ENTIDAD%TYPE,
    p_b01_descripcion       IN BNMAIE01_ENTIDAD.B01_DESCRIPCION%TYPE,
    p_b01_tipo_comunicacion IN BNMAIE01_ENTIDAD.B01_TIPO_COMUNICACION%TYPE,
    p_b01_tipo_trama_bn     IN BNMAIE01_ENTIDAD.B01_TIPO_TRAMA_BN%TYPE,
    p_b01_tipo_trama_ex     IN BNMAIE01_ENTIDAD.B01_TIPO_TRAMA_EX%TYPE,
    p_b01_ind_mapeo         IN BNMAIE01_ENTIDAD.B01_IND_MAPEO%TYPE,
    p_b01_estado            IN BNMAIE01_ENTIDAD.B01_ESTADO%TYPE,
    p_b01_usu_mod           IN BNMAIE01_ENTIDAD.B01_USU_MOD%TYPE,
    o_code_rpta             OUT VARCHAR2,
    o_desc_rpta             OUT VARCHAR2
  ) IS
  BEGIN
    UPDATE BNMAIE01_ENTIDAD
    SET
      B01_DESCRIPCION       = p_b01_descripcion,
      B01_TIPO_COMUNICACION = p_b01_tipo_comunicacion,
      B01_TIPO_TRAMA_BN     = p_b01_tipo_trama_bn,
      B01_TIPO_TRAMA_EX     = p_b01_tipo_trama_ex,
      B01_IND_MAPEO         = p_b01_ind_mapeo,
      B01_ESTADO            = p_b01_estado,
      B01_USU_MOD           = p_b01_usu_mod,
      B01_FEC_MOD           = SYSDATE
    WHERE
      B01_ID_ENTIDAD = p_b01_id_entidad;

    IF SQL%ROWCOUNT = 0 THEN
      o_code_rpta := c_cod_error;
      o_desc_rpta := 'Entidad no encontrada para actualizar. ID: ' || p_b01_id_entidad;
    ELSE
      o_code_rpta := c_cod_ok;
      o_desc_rpta := c_msg_ok;
      COMMIT;
    END IF;

  EXCEPTION
    WHEN OTHERS THEN
      ROLLBACK;
      o_code_rpta := c_cod_error;
      o_desc_rpta := c_msg_error || ': ' || SQLERRM;
  END SP_03_ACTUALIZAR;


  -- SP_04: Implementación para insertar una nueva entidad
  PROCEDURE SP_04_INSERTAR (
    p_b01_id_entidad        IN BNMAIE01_ENTIDAD.B01_ID_ENTIDAD%TYPE,
    p_b01_descripcion       IN BNMAIE01_ENTIDAD.B01_DESCRIPCION%TYPE,
    p_b01_tipo_comunicacion IN BNMAIE01_ENTIDAD.B01_TIPO_COMUNICACION%TYPE,
    p_b01_tipo_trama_bn     IN BNMAIE01_ENTIDAD.B01_TIPO_TRAMA_BN%TYPE,
    p_b01_tipo_trama_ex     IN BNMAIE01_ENTIDAD.B01_TIPO_TRAMA_EX%TYPE,
    p_b01_ind_mapeo         IN BNMAIE01_ENTIDAD.B01_IND_MAPEO%TYPE,
    p_b01_estado            IN BNMAIE01_ENTIDAD.B01_ESTADO%TYPE,
    p_b01_usu_cre           IN BNMAIE01_ENTIDAD.B01_USU_CRE%TYPE,
    o_code_rpta             OUT VARCHAR2,
    o_desc_rpta             OUT VARCHAR2
  ) IS
  BEGIN
    INSERT INTO BNMAIE01_ENTIDAD (
      B01_ID_ENTIDAD,
      B01_DESCRIPCION,
      B01_TIPO_COMUNICACION,
      B01_TIPO_TRAMA_BN,
      B01_TIPO_TRAMA_EX,
      B01_IND_MAPEO,
      B01_ESTADO,
      B01_USU_CRE,
      B01_FEC_CRE
    ) VALUES (
      p_b01_id_entidad,
      p_b01_descripcion,
      p_b01_tipo_comunicacion,
      p_b01_tipo_trama_bn,
      p_b01_tipo_trama_ex,
      p_b01_ind_mapeo,
      p_b01_estado,
      p_b01_usu_cre,
      SYSDATE
    );

    o_code_rpta := c_cod_ok;
    o_desc_rpta := c_msg_ok;
    COMMIT;

  EXCEPTION
    WHEN DUP_VAL_ON_INDEX THEN
      ROLLBACK;
      o_code_rpta := c_cod_error;
      o_desc_rpta := 'Error: La entidad con ID ''' || p_b01_id_entidad || ''' ya existe.';
    WHEN OTHERS THEN
      ROLLBACK;
      o_code_rpta := c_cod_error;
      o_desc_rpta := c_msg_error || ': ' || SQLERRM;
  END SP_04_INSERTAR;

END BNPKG_MAIE_ENTIDAD01;

/

  GRANT EXECUTE ON "BN_MAIE"."BNPKG_MAIE_ENTIDAD01" TO "BNRL_MAIE";
--------------------------------------------------------
--  DDL for Package Body BNPKG_MAIE_LLAVE_BODY09
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "BN_MAIE"."BNPKG_MAIE_LLAVE_BODY09" AS

  -- SP_01: Buscar llave de cuerpo por su ID
  PROCEDURE SP_01_BUSCAR_LLAVE_BODY (
    p_b09_id_llave_body IN  BNMAIE09_LLAVE_BODY.B09_ID_LLAVE_BODY%TYPE,
    o_cursor            OUT SYS_REFCURSOR,
    code_rpta           OUT VARCHAR2,
    desc_rpta           OUT VARCHAR2
  ) IS
  BEGIN
    OPEN o_cursor FOR
      SELECT B09_ID_LLAVE_BODY, B02_ID_OPERACION, B01_ID_ENTIDAD, B09_TAG_NAME,
             B09_TIPO_ORIGEN, B09_ID_LLAVE_PADRE, B09_TIPO_DATO_ESPERADO,
             B09_ES_PADRE, B09_VALOR_DEFECTO, B09_ORDEN, B09_IND_OBLIGATORIO,
             B09_DESCRIPCION, B09_IND_MAPEABLE, B09_USU_CRE, B09_FEC_CRE,
             B09_USU_MOD, B09_FEC_MOD
        FROM BNMAIE09_LLAVE_BODY
       WHERE B09_ID_LLAVE_BODY = p_b09_id_llave_body;

    code_rpta := c_cod_ok;
    desc_rpta := c_msg_ok;

  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      code_rpta := c_cod_error;
      desc_rpta := 'Llave de cuerpo no encontrada.';
    WHEN OTHERS THEN
      code_rpta := c_cod_error;
      desc_rpta := 'Error en SP_01_BUSCAR_LLAVE_BODY: ' || SQLERRM;
  END SP_01_BUSCAR_LLAVE_BODY;

  -- SP_02: Listar todas las llaves de cuerpo
  PROCEDURE SP_02_SELECCIONAR_LLAVES_BODY (
    o_cursor   OUT SYS_REFCURSOR,
    code_rpta  OUT VARCHAR2,
    desc_rpta  OUT VARCHAR2
  ) IS
  BEGIN
    OPEN o_cursor FOR
      SELECT B09_ID_LLAVE_BODY, B02_ID_OPERACION, B01_ID_ENTIDAD, B09_TAG_NAME,
             B09_TIPO_ORIGEN, B09_ID_LLAVE_PADRE, B09_TIPO_DATO_ESPERADO,
             B09_ES_PADRE, B09_VALOR_DEFECTO, B09_ORDEN, B09_IND_OBLIGATORIO,
             B09_DESCRIPCION, B09_IND_MAPEABLE, B09_USU_CRE, B09_FEC_CRE,
             B09_USU_MOD, B09_FEC_MOD
        FROM BNMAIE09_LLAVE_BODY
        ORDER BY B02_ID_OPERACION, B01_ID_ENTIDAD, B09_TIPO_ORIGEN, B09_ID_LLAVE_PADRE NULLS FIRST, B09_ORDEN;

    code_rpta := c_cod_ok;
    desc_rpta := c_msg_ok;

  EXCEPTION
    WHEN OTHERS THEN
      code_rpta := c_cod_error;
      desc_rpta := 'Error en SP_02_SELECCIONAR_LLAVES_BODY: ' || SQLERRM;
  END SP_02_SELECCIONAR_LLAVES_BODY;

  -- SP_03: Actualizar llave de cuerpo
  PROCEDURE SP_03_ACTUALIZAR_LLAVE_BODY (
    p_b09_id_llave_body     IN BNMAIE09_LLAVE_BODY.B09_ID_LLAVE_BODY%TYPE,
    p_b02_id_operacion      IN BNMAIE09_LLAVE_BODY.B02_ID_OPERACION%TYPE,
    p_b01_id_entidad        IN BNMAIE09_LLAVE_BODY.B01_ID_ENTIDAD%TYPE,
    p_b09_tag_name          IN BNMAIE09_LLAVE_BODY.B09_TAG_NAME%TYPE,
    p_b09_tipo_origen       IN BNMAIE09_LLAVE_BODY.B09_TIPO_ORIGEN%TYPE,
    p_b09_id_llave_padre    IN BNMAIE09_LLAVE_BODY.B09_ID_LLAVE_PADRE%TYPE,
    p_b09_tipo_dato_esperado IN BNMAIE09_LLAVE_BODY.B09_TIPO_DATO_ESPERADO%TYPE,
    p_b09_es_padre          IN BNMAIE09_LLAVE_BODY.B09_ES_PADRE%TYPE,
    p_b09_valor_defecto     IN BNMAIE09_LLAVE_BODY.B09_VALOR_DEFECTO%TYPE,
    p_b09_orden             IN BNMAIE09_LLAVE_BODY.B09_ORDEN%TYPE,
    p_b09_ind_obligatorio   IN BNMAIE09_LLAVE_BODY.B09_IND_OBLIGATORIO%TYPE,
    p_b09_descripcion       IN BNMAIE09_LLAVE_BODY.B09_DESCRIPCION%TYPE,
    p_b09_ind_mapeable      IN BNMAIE09_LLAVE_BODY.B09_IND_MAPEABLE%TYPE,
    p_b09_usu_mod           IN BNMAIE09_LLAVE_BODY.B09_USU_MOD%TYPE,
    code_rpta               OUT VARCHAR2,
    desc_rpta               OUT VARCHAR2
  ) IS
  BEGIN
    UPDATE BNMAIE09_LLAVE_BODY
       SET B02_ID_OPERACION      = p_b02_id_operacion,
           B01_ID_ENTIDAD        = p_b01_id_entidad,
           B09_TAG_NAME          = p_b09_tag_name,
           B09_TIPO_ORIGEN       = p_b09_tipo_origen,
           B09_ID_LLAVE_PADRE    = p_b09_id_llave_padre,
           B09_TIPO_DATO_ESPERADO = p_b09_tipo_dato_esperado,
           B09_ES_PADRE          = p_b09_es_padre,
           B09_VALOR_DEFECTO     = p_b09_valor_defecto,
           B09_ORDEN             = p_b09_orden,
           B09_IND_OBLIGATORIO   = p_b09_ind_obligatorio,
           B09_DESCRIPCION       = p_b09_descripcion,
           B09_IND_MAPEABLE      = p_b09_ind_mapeable,
           B09_USU_MOD           = p_b09_usu_mod,
           B09_FEC_MOD           = SYSDATE
     WHERE B09_ID_LLAVE_BODY = p_b09_id_llave_body;

    IF SQL%ROWCOUNT = 0 THEN
      code_rpta := c_cod_error;
      desc_rpta := 'No se encontró la llave de cuerpo para actualizar.';
    ELSE
      code_rpta := c_cod_ok;
      desc_rpta := c_msg_ok;
    END IF;

  EXCEPTION
    WHEN OTHERS THEN
      code_rpta := c_cod_error;
      desc_rpta := 'Error en SP_03_ACTUALIZAR_LLAVE_BODY: ' || SQLERRM;
  END SP_03_ACTUALIZAR_LLAVE_BODY;

  -- SP_04: Insertar una nueva llave de cuerpo
  PROCEDURE SP_04_INSERTAR_LLAVE_BODY (
    p_b02_id_operacion      IN  BNMAIE09_LLAVE_BODY.B02_ID_OPERACION%TYPE,
    p_b01_id_entidad        IN  BNMAIE09_LLAVE_BODY.B01_ID_ENTIDAD%TYPE,
    p_b09_tag_name          IN  BNMAIE09_LLAVE_BODY.B09_TAG_NAME%TYPE,
    p_b09_tipo_origen       IN  BNMAIE09_LLAVE_BODY.B09_TIPO_ORIGEN%TYPE,
    p_b09_id_llave_padre    IN  BNMAIE09_LLAVE_BODY.B09_ID_LLAVE_PADRE%TYPE,
    p_b09_tipo_dato_esperado IN BNMAIE09_LLAVE_BODY.B09_TIPO_DATO_ESPERADO%TYPE,
    p_b09_es_padre          IN  BNMAIE09_LLAVE_BODY.B09_ES_PADRE%TYPE,
    p_b09_valor_defecto     IN  BNMAIE09_LLAVE_BODY.B09_VALOR_DEFECTO%TYPE,
    p_b09_orden             IN  BNMAIE09_LLAVE_BODY.B09_ORDEN%TYPE,
    p_b09_ind_obligatorio   IN  BNMAIE09_LLAVE_BODY.B09_IND_OBLIGATORIO%TYPE,
    p_b09_descripcion       IN  BNMAIE09_LLAVE_BODY.B09_DESCRIPCION%TYPE,
    p_b09_ind_mapeable      IN  BNMAIE09_LLAVE_BODY.B09_IND_MAPEABLE%TYPE,
    p_b09_usu_cre           IN  BNMAIE09_LLAVE_BODY.B09_USU_CRE%TYPE,
    o_b09_id_llave_body     OUT BNMAIE09_LLAVE_BODY.B09_ID_LLAVE_BODY%TYPE,
    code_rpta               OUT VARCHAR2,
    desc_rpta               OUT VARCHAR2
  ) IS
    v_new_id_llave_body NUMBER(10);
  BEGIN
    -- Obtener el siguiente valor de la secuencia para B09_ID_LLAVE_BODY
    SELECT BNSQ_09_LLAVE_BODY.NEXTVAL INTO v_new_id_llave_body FROM DUAL;

    INSERT INTO BNMAIE09_LLAVE_BODY (
      B09_ID_LLAVE_BODY, B02_ID_OPERACION, B01_ID_ENTIDAD, B09_TAG_NAME,
      B09_TIPO_ORIGEN, B09_ID_LLAVE_PADRE, B09_TIPO_DATO_ESPERADO,
      B09_ES_PADRE, B09_VALOR_DEFECTO, B09_ORDEN, B09_IND_OBLIGATORIO,
      B09_DESCRIPCION, B09_IND_MAPEABLE, B09_USU_CRE, B09_FEC_CRE
    ) VALUES (
      v_new_id_llave_body, p_b02_id_operacion, p_b01_id_entidad, p_b09_tag_name,
      p_b09_tipo_origen, p_b09_id_llave_padre, p_b09_tipo_dato_esperado,
      p_b09_es_padre, p_b09_valor_defecto, p_b09_orden, p_b09_ind_obligatorio,
      p_b09_descripcion, p_b09_ind_mapeable, p_b09_usu_cre, SYSDATE
    );

    o_b09_id_llave_body := v_new_id_llave_body;
    code_rpta := c_cod_ok;
    desc_rpta := c_msg_ok;

  EXCEPTION
    WHEN OTHERS THEN
      o_b09_id_llave_body := NULL;
      code_rpta := c_cod_error;
      desc_rpta := 'Error en SP_04_INSERTAR_LLAVE_BODY: ' || SQLERRM;
  END SP_04_INSERTAR_LLAVE_BODY;

  -- SP_05: Buscar llaves de cuerpo por Operación, Entidad y opcionalmente por llave padre y tipo de origen
  PROCEDURE SP_05_BUSCAR_LLAVES_POR_OPERACION (
    p_b02_id_operacion IN  BNMAIE09_LLAVE_BODY.B02_ID_OPERACION%TYPE,
    p_b01_id_entidad   IN  BNMAIE09_LLAVE_BODY.B01_ID_ENTIDAD%TYPE,
    p_b09_tipo_origen  IN  BNMAIE09_LLAVE_BODY.B09_TIPO_ORIGEN%TYPE,
    p_b09_id_llave_padre IN BNMAIE09_LLAVE_BODY.B09_ID_LLAVE_PADRE%TYPE,
    o_cursor           OUT SYS_REFCURSOR,
    code_rpta          OUT VARCHAR2,
    desc_rpta          OUT VARCHAR2
  ) IS
  BEGIN
    OPEN o_cursor FOR
      SELECT B09_ID_LLAVE_BODY, B02_ID_OPERACION, B01_ID_ENTIDAD, B09_TAG_NAME,
             B09_TIPO_ORIGEN, B09_ID_LLAVE_PADRE, B09_TIPO_DATO_ESPERADO,
             B09_ES_PADRE, B09_VALOR_DEFECTO, B09_ORDEN, B09_IND_OBLIGATORIO,
             B09_DESCRIPCION, B09_IND_MAPEABLE, B09_USU_CRE, B09_FEC_CRE,
             B09_USU_MOD, B09_FEC_MOD
        FROM BNMAIE09_LLAVE_BODY
       WHERE B02_ID_OPERACION = p_b02_id_operacion
         AND B01_ID_ENTIDAD = p_b01_id_entidad
         AND (p_b09_tipo_origen IS NULL OR B09_TIPO_ORIGEN = p_b09_tipo_origen)
         AND (p_b09_id_llave_padre IS NULL AND B09_ID_LLAVE_PADRE IS NULL OR
              p_b09_id_llave_padre IS NOT NULL AND B09_ID_LLAVE_PADRE = p_b09_id_llave_padre)
       ORDER BY B09_ORDEN;

    code_rpta := c_cod_ok;
    desc_rpta := c_msg_ok;

  EXCEPTION
    WHEN OTHERS THEN
      code_rpta := c_cod_error;
      desc_rpta := 'Error en SP_05_BUSCAR_LLAVES_POR_OPERACION: ' || SQLERRM;
  END SP_05_BUSCAR_LLAVES_POR_OPERACION;

END BNPKG_MAIE_LLAVE_BODY09;

/

  GRANT EXECUTE ON "BN_MAIE"."BNPKG_MAIE_LLAVE_BODY09" TO "BNRL_MAIE";
--------------------------------------------------------
--  DDL for Package Body BNPKG_MAIE_MAPEO10
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "BN_MAIE"."BNPKG_MAIE_MAPEO10" AS

  -- SP_01: Buscar mapeo por su ID
  PROCEDURE SP_01_BUSCAR_MAPEO (
    p_b10_id_mapeo IN  BNMAIE10_MAPEO.B10_ID_MAPEO%TYPE,
    o_cursor       OUT SYS_REFCURSOR,
    code_rpta      OUT VARCHAR2,
    desc_rpta      OUT VARCHAR2
  ) IS
  BEGIN
    OPEN o_cursor FOR
      SELECT B10_ID_MAPEO, B02_ID_OPERACION, B01_ID_ENTIDAD, B08_ID_CAMPO_TRAMA,
             B09_ID_LLAVE_BODY, B10_IND_TRANSFORMACION, B10_EXPRESION_TRANSFORM,
             B10_IND_TRIM, B10_IND_AUTOCOMPLETAR, B10_VALOR_AUTOCOMPLETAR,
             B10_DESCRIPCION, B10_USU_CRE, B10_FEC_CRE, B10_USU_MOD, B10_FEC_MOD
        FROM BNMAIE10_MAPEO
       WHERE B10_ID_MAPEO = p_b10_id_mapeo;

    code_rpta := c_cod_ok;
    desc_rpta := c_msg_ok;

  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      code_rpta := c_cod_error;
      desc_rpta := 'Mapeo no encontrado.';
    WHEN OTHERS THEN
      code_rpta := c_cod_error;
      desc_rpta := 'Error en SP_01_BUSCAR_MAPEO: ' || SQLERRM;
  END SP_01_BUSCAR_MAPEO;

  -- SP_02: Listar todos los mapeos
  PROCEDURE SP_02_SELECCIONAR_MAPEOS (
    o_cursor   OUT SYS_REFCURSOR,
    code_rpta  OUT VARCHAR2,
    desc_rpta  OUT VARCHAR2
  ) IS
  BEGIN
    OPEN o_cursor FOR
      SELECT B10_ID_MAPEO, B02_ID_OPERACION, B01_ID_ENTIDAD, B08_ID_CAMPO_TRAMA,
             B09_ID_LLAVE_BODY, B10_IND_TRANSFORMACION, B10_EXPRESION_TRANSFORM,
             B10_IND_TRIM, B10_IND_AUTOCOMPLETAR, B10_VALOR_AUTOCOMPLETAR,
             B10_DESCRIPCION, B10_USU_CRE, B10_FEC_CRE, B10_USU_MOD, B10_FEC_MOD
        FROM BNMAIE10_MAPEO
        ORDER BY B02_ID_OPERACION, B01_ID_ENTIDAD, B08_ID_CAMPO_TRAMA, B09_ID_LLAVE_BODY;

    code_rpta := c_cod_ok;
    desc_rpta := c_msg_ok;

  EXCEPTION
    WHEN OTHERS THEN
      code_rpta := c_cod_error;
      desc_rpta := 'Error en SP_02_SELECCIONAR_MAPEOS: ' || SQLERRM;
  END SP_02_SELECCIONAR_MAPEOS;

  -- SP_03: Actualizar mapeo
  PROCEDURE SP_03_ACTUALIZAR_MAPEO (
    p_b10_id_mapeo            IN BNMAIE10_MAPEO.B10_ID_MAPEO%TYPE,
    p_b02_id_operacion        IN BNMAIE10_MAPEO.B02_ID_OPERACION%TYPE,
    p_b01_id_entidad          IN BNMAIE10_MAPEO.B01_ID_ENTIDAD%TYPE,
    p_b08_id_campo_trama      IN BNMAIE10_MAPEO.B08_ID_CAMPO_TRAMA%TYPE,
    p_b09_id_llave_body       IN BNMAIE10_MAPEO.B09_ID_LLAVE_BODY%TYPE,
    p_b10_ind_transformacion  IN BNMAIE10_MAPEO.B10_IND_TRANSFORMACION%TYPE,
    p_b10_expresion_transform IN BNMAIE10_MAPEO.B10_EXPRESION_TRANSFORM%TYPE,
    p_b10_ind_trim            IN BNMAIE10_MAPEO.B10_IND_TRIM%TYPE,
    p_b10_ind_autocompletar   IN BNMAIE10_MAPEO.B10_IND_AUTOCOMPLETAR%TYPE,
    p_b10_valor_autocompletar IN BNMAIE10_MAPEO.B10_VALOR_AUTOCOMPLETAR%TYPE,
    p_b10_descripcion         IN BNMAIE10_MAPEO.B10_DESCRIPCION%TYPE,
    p_b10_usu_mod             IN BNMAIE10_MAPEO.B10_USU_MOD%TYPE,
    code_rpta                 OUT VARCHAR2,
    desc_rpta                 OUT VARCHAR2
  ) IS
  BEGIN
    UPDATE BNMAIE10_MAPEO
       SET B02_ID_OPERACION        = p_b02_id_operacion,
           B01_ID_ENTIDAD          = p_b01_id_entidad,
           B08_ID_CAMPO_TRAMA      = p_b08_id_campo_trama,
           B09_ID_LLAVE_BODY       = p_b09_id_llave_body,
           B10_IND_TRANSFORMACION  = p_b10_ind_transformacion,
           B10_EXPRESION_TRANSFORM = p_b10_expresion_transform,
           B10_IND_TRIM            = p_b10_ind_trim,
           B10_IND_AUTOCOMPLETAR   = p_b10_ind_autocompletar,
           B10_VALOR_AUTOCOMPLETAR = p_b10_valor_autocompletar,
           B10_DESCRIPCION         = p_b10_descripcion,
           B10_USU_MOD             = p_b10_usu_mod,
           B10_FEC_MOD             = SYSDATE
     WHERE B10_ID_MAPEO = p_b10_id_mapeo;

    IF SQL%ROWCOUNT = 0 THEN
      code_rpta := c_cod_error;
      desc_rpta := 'No se encontró el mapeo para actualizar.';
    ELSE
      code_rpta := c_cod_ok;
      desc_rpta := c_msg_ok;
    END IF;

  EXCEPTION
    WHEN OTHERS THEN
      code_rpta := c_cod_error;
      desc_rpta := 'Error en SP_03_ACTUALIZAR_MAPEO: ' || SQLERRM;
  END SP_03_ACTUALIZAR_MAPEO;

  -- SP_04: Insertar un nuevo mapeo
  PROCEDURE SP_04_INSERTAR_MAPEO (
    p_b02_id_operacion        IN  BNMAIE10_MAPEO.B02_ID_OPERACION%TYPE,
    p_b01_id_entidad          IN  BNMAIE10_MAPEO.B01_ID_ENTIDAD%TYPE,
    p_b08_id_campo_trama      IN  BNMAIE10_MAPEO.B08_ID_CAMPO_TRAMA%TYPE,
    p_b09_id_llave_body       IN  BNMAIE10_MAPEO.B09_ID_LLAVE_BODY%TYPE,
    p_b10_ind_transformacion  IN  BNMAIE10_MAPEO.B10_IND_TRANSFORMACION%TYPE,
    p_b10_expresion_transform IN  BNMAIE10_MAPEO.B10_EXPRESION_TRANSFORM%TYPE,
    p_b10_ind_trim            IN  BNMAIE10_MAPEO.B10_IND_TRIM%TYPE,
    p_b10_ind_autocompletar   IN  BNMAIE10_MAPEO.B10_IND_AUTOCOMPLETAR%TYPE,
    p_b10_valor_autocompletar IN  BNMAIE10_MAPEO.B10_VALOR_AUTOCOMPLETAR%TYPE,
    p_b10_descripcion         IN  BNMAIE10_MAPEO.B10_DESCRIPCION%TYPE,
    p_b10_usu_cre             IN  BNMAIE10_MAPEO.B10_USU_CRE%TYPE,
    o_b10_id_mapeo            OUT BNMAIE10_MAPEO.B10_ID_MAPEO%TYPE,
    code_rpta                 OUT VARCHAR2,
    desc_rpta                 OUT VARCHAR2
  ) IS
    v_new_id_mapeo NUMBER(10);
  BEGIN
    -- Obtener el siguiente valor de la secuencia para B10_ID_MAPEO
    SELECT BNSQ_10_MAPEO.NEXTVAL INTO v_new_id_mapeo FROM DUAL;

    INSERT INTO BNMAIE10_MAPEO (
      B10_ID_MAPEO, B02_ID_OPERACION, B01_ID_ENTIDAD, B08_ID_CAMPO_TRAMA,
      B09_ID_LLAVE_BODY, B10_IND_TRANSFORMACION, B10_EXPRESION_TRANSFORM,
      B10_IND_TRIM, B10_IND_AUTOCOMPLETAR, B10_VALOR_AUTOCOMPLETAR,
      B10_DESCRIPCION, B10_USU_CRE, B10_FEC_CRE
    ) VALUES (
      v_new_id_mapeo, p_b02_id_operacion, p_b01_id_entidad, p_b08_id_campo_trama,
      p_b09_id_llave_body, p_b10_ind_transformacion, p_b10_expresion_transform,
      p_b10_ind_trim, p_b10_ind_autocompletar, p_b10_valor_autocompletar,
      p_b10_descripcion, p_b10_usu_cre, SYSDATE
    );

    o_b10_id_mapeo := v_new_id_mapeo;
    code_rpta := c_cod_ok;
    desc_rpta := c_msg_ok;

  EXCEPTION
    WHEN OTHERS THEN
      o_b10_id_mapeo := NULL;
      code_rpta := c_cod_error;
      desc_rpta := 'Error en SP_04_INSERTAR_MAPEO: ' || SQLERRM;
  END SP_04_INSERTAR_MAPEO;

  -- SP_05: Buscar mapeos por Operación y Entidad
  PROCEDURE SP_05_BUSCAR_MAPEOS_POR_OPERACION (
    p_b02_id_operacion IN  BNMAIE10_MAPEO.B02_ID_OPERACION%TYPE,
    p_b01_id_entidad   IN  BNMAIE10_MAPEO.B01_ID_ENTIDAD%TYPE,
    o_cursor           OUT SYS_REFCURSOR,
    code_rpta          OUT VARCHAR2,
    desc_rpta          OUT VARCHAR2
  ) IS
  BEGIN
    OPEN o_cursor FOR
      SELECT B10_ID_MAPEO, B02_ID_OPERACION, B01_ID_ENTIDAD, B08_ID_CAMPO_TRAMA,
             B09_ID_LLAVE_BODY, B10_IND_TRANSFORMACION, B10_EXPRESION_TRANSFORM,
             B10_IND_TRIM, B10_IND_AUTOCOMPLETAR, B10_VALOR_AUTOCOMPLETAR,
             B10_DESCRIPCION, B10_USU_CRE, B10_FEC_CRE, B10_USU_MOD, B10_FEC_MOD
        FROM BNMAIE10_MAPEO
       WHERE B02_ID_OPERACION = p_b02_id_operacion
         AND B01_ID_ENTIDAD = p_b01_id_entidad
       ORDER BY B08_ID_CAMPO_TRAMA, B09_ID_LLAVE_BODY;

    code_rpta := c_cod_ok;
    desc_rpta := c_msg_ok;

  EXCEPTION
    WHEN OTHERS THEN
      code_rpta := c_cod_error;
      desc_rpta := 'Error en SP_05_BUSCAR_MAPEOS_POR_OPERACION: ' || SQLERRM;
  END SP_05_BUSCAR_MAPEOS_POR_OPERACION;

END BNPKG_MAIE_MAPEO10;

/

  GRANT EXECUTE ON "BN_MAIE"."BNPKG_MAIE_MAPEO10" TO "BNRL_MAIE";
--------------------------------------------------------
--  DDL for Package Body BNPKG_MAIE_OPERACION02
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "BN_MAIE"."BNPKG_MAIE_OPERACION02" AS

  -- SP_01: Buscar operación por ID de Operación, ID de Entidad y Código de Operación
  PROCEDURE SP_01_BUSCAR_OPERACION (
    p_b02_id_operacion  IN  BNMAIE02_OPERACION.B02_ID_OPERACION%TYPE,
    p_b01_id_entidad    IN  BNMAIE02_OPERACION.B01_ID_ENTIDAD%TYPE,
    p_b02_cod_operacion IN  BNMAIE02_OPERACION.B02_COD_OPERACION%TYPE, -- Nuevo parámetro
    o_cursor            OUT SYS_REFCURSOR,
    code_rpta           OUT VARCHAR2,
    desc_rpta           OUT VARCHAR2
  ) IS
  BEGIN
    OPEN o_cursor FOR
      SELECT B02_ID_OPERACION, B01_ID_ENTIDAD, B07_ID_CONEXION, B02_DESCRIPCION,
             B02_REQUIERE_BODY_ENVIO, B02_COD_OPERACION, -- Nueva columna
             B02_USU_CRE, B02_FEC_CRE, B02_USU_MOD, B02_FEC_MOD
        FROM BNMAIE02_OPERACION
       WHERE B02_ID_OPERACION = p_b02_id_operacion
         AND B01_ID_ENTIDAD = p_b01_id_entidad
         AND B02_COD_OPERACION = p_b02_cod_operacion; -- Nueva condición

    code_rpta := c_cod_ok;
    desc_rpta := c_msg_ok;

  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      code_rpta := c_cod_error;
      desc_rpta := 'Operación no encontrada.';
    WHEN OTHERS THEN
      code_rpta := c_cod_error;
      desc_rpta := 'Error en SP_01_BUSCAR_OPERACION: ' || SQLERRM;
  END;

  -- SP_02: Listar todas las operaciones con info de entidad
  PROCEDURE SP_02_SELECCIONAR_OPERACIONES (
    o_cursor   OUT SYS_REFCURSOR,
    code_rpta  OUT VARCHAR2,
    desc_rpta  OUT VARCHAR2
  ) IS
  BEGIN
    OPEN o_cursor FOR
      SELECT o.B02_ID_OPERACION, o.B01_ID_ENTIDAD, o.B07_ID_CONEXION, o.B02_DESCRIPCION,
             o.B02_REQUIERE_BODY_ENVIO, o.B02_COD_OPERACION, -- Nueva columna
             o.B02_USU_CRE, o.B02_FEC_CRE, o.B02_USU_MOD, o.B02_FEC_MOD,
             e.B01_DESCRIPCION AS ENTIDAD_DESCRIPCION -- Incluye la descripción de la entidad para contexto
      FROM BNMAIE02_OPERACION o
      JOIN BNMAIE01_ENTIDAD e ON o.B01_ID_ENTIDAD = e.B01_ID_ENTIDAD;

    code_rpta := c_cod_ok;
    desc_rpta := c_msg_ok;

  EXCEPTION
    WHEN OTHERS THEN
      code_rpta := c_cod_error;
      desc_rpta := 'Error en SP_02_SELECCIONAR_OPERACIONES: ' || SQLERRM;
  END;

  -- SP_03: Actualizar operación
  PROCEDURE SP_03_ACTUALIZAR_OPERACION (
    p_b02_id_operacion      IN BNMAIE02_OPERACION.B02_ID_OPERACION%TYPE,
    p_b01_id_entidad        IN BNMAIE02_OPERACION.B01_ID_ENTIDAD%TYPE,
    p_b02_cod_operacion     IN BNMAIE02_OPERACION.B02_COD_OPERACION%TYPE, -- Nuevo parámetro (para WHERE)
    p_b07_id_conexion       IN BNMAIE02_OPERACION.B07_ID_CONEXION%TYPE,
    p_b02_descripcion       IN BNMAIE02_OPERACION.B02_DESCRIPCION%TYPE,
    p_b02_requiere_body_envio IN BNMAIE02_OPERACION.B02_REQUIERE_BODY_ENVIO%TYPE,
    p_b02_usu_mod           IN BNMAIE02_OPERACION.B02_USU_MOD%TYPE,
    code_rpta               OUT VARCHAR2,
    desc_rpta               OUT VARCHAR2
  ) IS
  BEGIN
    UPDATE BNMAIE02_OPERACION
       SET B07_ID_CONEXION       = p_b07_id_conexion,
           B02_DESCRIPCION       = p_b02_descripcion,
           B02_REQUIERE_BODY_ENVIO = p_b02_requiere_body_envio,
           B02_USU_MOD           = p_b02_usu_mod,
           B02_FEC_MOD           = SYSDATE
     WHERE B02_ID_OPERACION      = p_b02_id_operacion
       AND B01_ID_ENTIDAD        = p_b01_id_entidad
       AND B02_COD_OPERACION     = p_b02_cod_operacion; -- Nueva condición para la UK

    IF SQL%ROWCOUNT = 0 THEN
      code_rpta := c_cod_error;
      desc_rpta := 'No se encontró la operación para actualizar con el ID, Entidad y Código de Operación proporcionados.';
    ELSE
      code_rpta := c_cod_ok;
      desc_rpta := c_msg_ok;
    END IF;

  EXCEPTION
    WHEN OTHERS THEN
      code_rpta := c_cod_error;
      desc_rpta := 'Error en SP_03_ACTUALIZAR_OPERACION: ' || SQLERRM;
  END;

  -- SP_04: Insertar operación
  PROCEDURE SP_04_INSERTAR_OPERACION (
    p_b01_id_entidad        IN  BNMAIE02_OPERACION.B01_ID_ENTIDAD%TYPE,
    p_b07_id_conexion       IN  BNMAIE02_OPERACION.B07_ID_CONEXION%TYPE,
    p_b02_descripcion       IN  BNMAIE02_OPERACION.B02_DESCRIPCION%TYPE,
    p_b02_requiere_body_envio IN BNMAIE02_OPERACION.B02_REQUIERE_BODY_ENVIO%TYPE,
    p_b02_cod_operacion     IN  BNMAIE02_OPERACION.B02_COD_OPERACION%TYPE, -- Nuevo parámetro
    p_b02_usu_cre           IN  BNMAIE02_OPERACION.B02_USU_CRE%TYPE,
    o_b02_id_operacion      OUT BNMAIE02_OPERACION.B02_ID_OPERACION%TYPE,
    code_rpta               OUT VARCHAR2,
    desc_rpta               OUT VARCHAR2
  ) IS
    v_new_id_operacion NUMBER(10);
  BEGIN
    -- Obtener el siguiente valor de la secuencia para B02_ID_OPERACION
    SELECT BNSQ_02_OPERACION.NEXTVAL INTO v_new_id_operacion FROM DUAL;

    INSERT INTO BNMAIE02_OPERACION (
        B02_ID_OPERACION,
        B01_ID_ENTIDAD,
        B07_ID_CONEXION,
        B02_DESCRIPCION,
        B02_REQUIERE_BODY_ENVIO,
        B02_COD_OPERACION, -- Nueva columna
        B02_USU_CRE,
        B02_FEC_CRE
    )
    VALUES (
        v_new_id_operacion,
        p_b01_id_entidad,
        p_b07_id_conexion,
        p_b02_descripcion,
        p_b02_requiere_body_envio,
        p_b02_cod_operacion, -- Nuevo valor
        p_b02_usu_cre,
        SYSDATE
    );

    o_b02_id_operacion := v_new_id_operacion; -- Retornar el ID generado
    code_rpta := c_cod_ok;
    desc_rpta := c_msg_ok;

  EXCEPTION
    WHEN OTHERS THEN
      o_b02_id_operacion := NULL;
      code_rpta := c_cod_error;
      desc_rpta := 'Error en SP_04_INSERTAR_OPERACION: ' || SQLERRM;
  END;

END BNPKG_MAIE_OPERACION02;

/

  GRANT EXECUTE ON "BN_MAIE"."BNPKG_MAIE_OPERACION02" TO "BNRL_MAIE";
--------------------------------------------------------
--  DDL for Package Body BNPKG_MAIE_PARAMETRO04
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "BN_MAIE"."BNPKG_MAIE_PARAMETRO04" AS

  -- SP_01: Buscar parámetro por grupo, código, operación y entidad
  PROCEDURE SP_01_BUSCAR_PARAMETRO(
    p_cod_grup      IN BNMAIE04_PARAMETRO.B04_COD_GRUP%TYPE,
    p_cod_para      IN BNMAIE04_PARAMETRO.B04_COD_PARA%TYPE,
    p_cod_oper      IN BNMAIE04_PARAMETRO.B04_COD_OPER%TYPE,
    p_id_entidad_fk IN BNMAIE04_PARAMETRO.B01_ID_ENTIDAD_FK%TYPE,
    o_cursor        OUT SYS_REFCURSOR,
    code_rpta       OUT VARCHAR2,
    desc_rpta       OUT VARCHAR2
  ) IS
  BEGIN
    OPEN o_cursor FOR
      SELECT B04_ID_PARA, B04_COD_GRUP, B04_COD_PARA, B04_IND_ACT, B04_DESCRIP,
             B04_FEC_CRE, B04_FEC_MOD, B04_USU_CRE, B04_USU_MOD, B04_VAL_01,
             B04_VAL_02, B04_VAL_03, B04_COD_OPER, B01_ID_ENTIDAD_FK
      FROM BNMAIE04_PARAMETRO
      WHERE B04_COD_GRUP = p_cod_grup
        AND B04_COD_PARA = p_cod_para
        AND B04_COD_OPER = p_cod_oper
        AND B01_ID_ENTIDAD_FK = p_id_entidad_fk;

    code_rpta := c_cod_ok;
    desc_rpta := c_msg_ok;
  EXCEPTION
    WHEN OTHERS THEN
      code_rpta := c_cod_error;
      desc_rpta := 'Error en SP_01: ' || SQLERRM;
  END;

  -- SP_02: Seleccionar todos los parámetros
  PROCEDURE SP_02_SELECCIONAR_PARAMETROS(
    o_cursor   OUT SYS_REFCURSOR,
    code_rpta  OUT VARCHAR2,
    desc_rpta  OUT VARCHAR2
  ) IS
  BEGIN
    OPEN o_cursor FOR
      SELECT B04_ID_PARA, B04_COD_GRUP, B04_COD_PARA, B04_IND_ACT, B04_DESCRIP,
             B04_FEC_CRE, B04_FEC_MOD, B04_USU_CRE, B04_USU_MOD, B04_VAL_01,
             B04_VAL_02, B04_VAL_03, B04_COD_OPER, B01_ID_ENTIDAD_FK
      FROM BNMAIE04_PARAMETRO;

    code_rpta := c_cod_ok;
    desc_rpta := c_msg_ok;
  EXCEPTION
    WHEN OTHERS THEN
      code_rpta := c_cod_error;
      desc_rpta := 'Error en SP_02: ' || SQLERRM;
  END;

  -- SP_03: Insertar parámetro
  PROCEDURE SP_03_INSERTAR_PARAMETRO(
    p_cod_grup      IN BNMAIE04_PARAMETRO.B04_COD_GRUP%TYPE,
    p_cod_para      IN BNMAIE04_PARAMETRO.B04_COD_PARA%TYPE,
    p_descrip       IN BNMAIE04_PARAMETRO.B04_DESCRIP%TYPE,
    p_valor1        IN BNMAIE04_PARAMETRO.B04_VAL_01%TYPE,
    p_valor2        IN BNMAIE04_PARAMETRO.B04_VAL_02%TYPE,
    p_valor3        IN BNMAIE04_PARAMETRO.B04_VAL_03%TYPE,
    p_ind_act       IN BNMAIE04_PARAMETRO.B04_IND_ACT%TYPE,
    p_cod_oper      IN BNMAIE04_PARAMETRO.B04_COD_OPER%TYPE,
    p_id_entidad_fk IN BNMAIE04_PARAMETRO.B01_ID_ENTIDAD_FK%TYPE,
    p_usu_cre       IN BNMAIE04_PARAMETRO.B04_USU_CRE%TYPE,
    code_rpta       OUT VARCHAR2,
    desc_rpta       OUT VARCHAR2
  ) IS
  BEGIN
    INSERT INTO BNMAIE04_PARAMETRO (
      B04_ID_PARA, B04_COD_GRUP, B04_COD_PARA, B04_DESCRIP, B04_VAL_01,
      B04_VAL_02, B04_VAL_03, B04_IND_ACT, B04_COD_OPER, B01_ID_ENTIDAD_FK,
      B04_FEC_CRE, B04_USU_CRE
    ) VALUES (
      BNSQ_04_PARAMETRO.NEXTVAL,
      p_cod_grup, p_cod_para, p_descrip, p_valor1,
      p_valor2, p_valor3, p_ind_act, p_cod_oper, p_id_entidad_fk,
      SYSDATE, p_usu_cre
    );

    code_rpta := c_cod_ok;
    desc_rpta := c_msg_ok;
  EXCEPTION
    WHEN OTHERS THEN
      code_rpta := c_cod_error;
      desc_rpta := 'Error en SP_03: ' || SQLERRM;
  END;

  -- SP_04: Actualizar parámetro con operación
  PROCEDURE SP_04_ACTUALIZAR_PARAMETRO_OP(
    p_id_para       IN BNMAIE04_PARAMETRO.B04_ID_PARA%TYPE,
    p_valor1        IN BNMAIE04_PARAMETRO.B04_VAL_01%TYPE,
    p_valor2        IN BNMAIE04_PARAMETRO.B04_VAL_02%TYPE,
    p_valor3        IN BNMAIE04_PARAMETRO.B04_VAL_03%TYPE,
    p_ind_act       IN BNMAIE04_PARAMETRO.B04_IND_ACT%TYPE,
    p_cod_oper      IN BNMAIE04_PARAMETRO.B04_COD_OPER%TYPE,
    p_id_entidad_fk IN BNMAIE04_PARAMETRO.B01_ID_ENTIDAD_FK%TYPE,
    p_usu_mod       IN BNMAIE04_PARAMETRO.B04_USU_MOD%TYPE,
    code_rpta       OUT VARCHAR2,
    desc_rpta       OUT VARCHAR2
  ) IS
  BEGIN
    UPDATE BNMAIE04_PARAMETRO
    SET B04_VAL_01 = p_valor1,
        B04_VAL_02 = p_valor2,
        B04_VAL_03 = p_valor3, -- Actualiza B04_VAL_03
        B04_IND_ACT = p_ind_act,
        -- B04_COD_OPER y B01_ID_ENTIDAD_FK no se actualizan aquí, se usan para WHERE si es necesario
        B04_USU_MOD = p_usu_mod,
        B04_FEC_MOD = SYSDATE
    WHERE B04_ID_PARA = p_id_para
      AND B04_COD_OPER = p_cod_oper -- Se mantiene para asegurar que se actualiza el correcto
      AND B01_ID_ENTIDAD_FK = p_id_entidad_fk; -- Se mantiene para asegurar que se actualiza el correcto

    code_rpta := c_cod_ok;
    desc_rpta := c_msg_ok;
  EXCEPTION
    WHEN OTHERS THEN
      code_rpta := c_cod_error;
      desc_rpta := 'Error en SP_04: ' || SQLERRM;
  END;

  -- SP_05: Actualizar parámetro sin operación (genérico, por ID_PARA)
  PROCEDURE SP_05_ACTUALIZAR_PARAMETRO_GEN(
    p_id_para    IN BNMAIE04_PARAMETRO.B04_ID_PARA%TYPE,
    p_desc       IN BNMAIE04_PARAMETRO.B04_DESCRIP%TYPE,
    p_valor1     IN BNMAIE04_PARAMETRO.B04_VAL_01%TYPE,
    p_valor2     IN BNMAIE04_PARAMETRO.B04_VAL_02%TYPE,
    p_valor3     IN BNMAIE04_PARAMETRO.B04_VAL_03%TYPE,
    p_ind_act    IN BNMAIE04_PARAMETRO.B04_IND_ACT%TYPE,
    p_usu_mod    IN BNMAIE04_PARAMETRO.B04_USU_MOD%TYPE,
    code_rpta    OUT VARCHAR2,
    desc_rpta    OUT VARCHAR2
  ) IS
  BEGIN
    UPDATE BNMAIE04_PARAMETRO
    SET B04_VAL_01 = p_valor1,
        B04_VAL_02 = p_valor2,
        B04_VAL_03 = p_valor3, -- Actualiza B04_VAL_03
        B04_IND_ACT = p_ind_act,
        B04_DESCRIP = p_desc,
        -- B04_COD_OPER y B01_ID_ENTIDAD_FK no se modifican aquí, ya que es una actualización "genérica" por ID_PARA
        B04_USU_MOD = p_usu_mod,
        B04_FEC_MOD = SYSDATE
    WHERE B04_ID_PARA = p_id_para;

    code_rpta := c_cod_ok;
    desc_rpta := c_msg_ok;
  EXCEPTION
    WHEN OTHERS THEN
      code_rpta := c_cod_error;
      desc_rpta := 'Error en SP_05: ' || SQLERRM;
  END;

  -- SP_06: Crear grupo (solo encabezado, cod_para = '0')
  PROCEDURE SP_06_CREAR_GRUPO(
    p_cod_grup      IN BNMAIE04_PARAMETRO.B04_COD_GRUP%TYPE,
    p_descrip       IN BNMAIE04_PARAMETRO.B04_DESCRIP%TYPE,
    p_cod_oper      IN BNMAIE04_PARAMETRO.B04_COD_OPER%TYPE,
    p_id_entidad_fk IN BNMAIE04_PARAMETRO.B01_ID_ENTIDAD_FK%TYPE,
    p_usu_cre       IN BNMAIE04_PARAMETRO.B04_USU_CRE%TYPE,
    code_rpta       OUT VARCHAR2,
    desc_rpta       OUT VARCHAR2
  ) IS
  BEGIN
    INSERT INTO BNMAIE04_PARAMETRO (
      B04_ID_PARA, B04_COD_GRUP, B04_COD_PARA, B04_DESCRIP, B04_VAL_01,
      B04_VAL_02, B04_VAL_03, B04_IND_ACT, B04_COD_OPER, B01_ID_ENTIDAD_FK,
      B04_FEC_CRE, B04_USU_CRE
    ) VALUES (
      BNSQ_04_PARAMETRO.NEXTVAL,
      p_cod_grup, 0, p_descrip, '--', -- B04_COD_PARA = 0 para grupos
      NULL, NULL, 1, p_cod_oper, p_id_entidad_fk, -- Asigna la operación y entidad al grupo
      SYSDATE, p_usu_cre
    );

    code_rpta := c_cod_ok;
    desc_rpta := c_msg_ok;
  EXCEPTION
    WHEN OTHERS THEN
      code_rpta := c_cod_error;
      desc_rpta := 'Error en SP_06: ' || SQLERRM;
  END;

  -- SP_07: Listar grupos (cod_para = '0')
  PROCEDURE SP_07_SELECCIONAR_GRUPOS(
    o_cursor   OUT SYS_REFCURSOR,
    code_rpta  OUT VARCHAR2,
    desc_rpta  OUT VARCHAR2
  ) IS
  BEGIN
    OPEN o_cursor FOR
      SELECT B04_ID_PARA, B04_COD_GRUP, B04_COD_PARA, B04_IND_ACT, B04_DESCRIP,
             B04_FEC_CRE, B04_FEC_MOD, B04_USU_CRE, B04_USU_MOD, B04_VAL_01,
             B04_VAL_02, B04_VAL_03, B04_COD_OPER, B01_ID_ENTIDAD_FK
      FROM BNMAIE04_PARAMETRO
      WHERE B04_COD_PARA = 0; -- Busca grupos donde B04_COD_PARA es 0

    code_rpta := c_cod_ok;
    desc_rpta := c_msg_ok;
  EXCEPTION
    WHEN OTHERS THEN
      code_rpta := c_cod_error;
      desc_rpta := 'Error en SP_07: ' || SQLERRM;
  END;

  -- SP_08: Listar parámetros de un grupo, operación y entidad
  PROCEDURE SP_08_SELECCIONAR_PARAMETROS_GRUPO(
    p_cod_grup      IN BNMAIE04_PARAMETRO.B04_COD_GRUP%TYPE,
    p_cod_oper      IN BNMAIE04_PARAMETRO.B04_COD_OPER%TYPE,
    p_id_entidad_fk IN BNMAIE04_PARAMETRO.B01_ID_ENTIDAD_FK%TYPE,
    o_cursor        OUT SYS_REFCURSOR,
    code_rpta       OUT VARCHAR2,
    desc_rpta       OUT VARCHAR2
  ) IS
  BEGIN
    OPEN o_cursor FOR
      SELECT B04_ID_PARA, B04_COD_GRUP, B04_COD_PARA, B04_IND_ACT, B04_DESCRIP,
             B04_FEC_CRE, B04_FEC_MOD, B04_USU_CRE, B04_USU_MOD, B04_VAL_01,
             B04_VAL_02, B04_VAL_03, B04_COD_OPER, B01_ID_ENTIDAD_FK
      FROM BNMAIE04_PARAMETRO
      WHERE B04_COD_GRUP = p_cod_grup
        AND B04_COD_PARA != 0 -- Excluye el registro de grupo en sí
        AND B04_COD_OPER = p_cod_oper
        AND B01_ID_ENTIDAD_FK = p_id_entidad_fk;

    code_rpta := c_cod_ok;
    desc_rpta := c_msg_ok;
  EXCEPTION
    WHEN OTHERS THEN
      code_rpta := c_cod_error;
      desc_rpta := 'Error en SP_08: ' || SQLERRM;
  END;

  -- SP_09: Obtener el máximo código de parámetro para un grupo, operación y entidad
  PROCEDURE SP_09_OBTENER_MAXIMO_PARAMETRO(
    p_cod_grup      IN  BNMAIE04_PARAMETRO.B04_COD_GRUP%TYPE,
    p_cod_oper      IN  BNMAIE04_PARAMETRO.B04_COD_OPER%TYPE,
    p_id_entidad_fk IN  BNMAIE04_PARAMETRO.B01_ID_ENTIDAD_FK%TYPE,
    p_cod_nuevo     OUT VARCHAR2,
    code_rpta       OUT VARCHAR2,
    desc_rpta       OUT VARCHAR2
  ) IS
    v_maximo NUMBER;
  BEGIN
    SELECT NVL(MAX(TO_NUMBER(B04_COD_PARA)), 0)
    INTO v_maximo
    FROM BNMAIE04_PARAMETRO
    WHERE B04_COD_GRUP = p_cod_grup
      AND B04_COD_PARA != 0
      AND B04_COD_OPER = p_cod_oper
      AND B01_ID_ENTIDAD_FK = p_id_entidad_fk
      AND REGEXP_LIKE(B04_COD_PARA, '^\d+$'); -- asegurar que es numérico

    p_cod_nuevo := TO_CHAR(v_maximo + 1);
    code_rpta := c_cod_ok;
    desc_rpta := c_msg_ok;

  EXCEPTION
    WHEN OTHERS THEN
        p_cod_nuevo := NULL;
        code_rpta := c_cod_error;
        desc_rpta := 'Error en SP_09: ' || SQLERRM;
  END;

END BNPKG_MAIE_PARAMETRO04;

/

  GRANT EXECUTE ON "BN_MAIE"."BNPKG_MAIE_PARAMETRO04" TO "BNRL_MAIE";
